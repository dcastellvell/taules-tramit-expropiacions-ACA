# -*- coding: utf-8 -*-
"""
/***************************************************************************
 TaulesTramitExpro
                                 A QGIS plugin
 Gestiona els taules de la tramitació de les expropiacions
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2024-12-01
        git sha              : $Format:%H$
        copyright            : (C) 2024 by David Castellvell Buchaca
        email                : dcastellvell@gencat.cat
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""
from distutils.log import error
from fileinput import filename
from qgis.PyQt.QtCore import QSettings, QTranslator, QCoreApplication
from qgis.PyQt.QtGui import QIcon
from qgis.PyQt.QtWidgets import QAction, QFileDialog, QMessageBox 
from qgis.PyQt.QtXml import QDomDocument
from osgeo import ogr
from qgis.core import QgsProject, QgsVectorLayer, QgsEditFormConfig, QgsProviderRegistry, QgsDataProvider, QgsPrintLayout, QgsReadWriteContext
from PyQt5 import uic
from qgis.utils import iface

# Initialize Qt resources from file resources.py
from .resources import *
# Import the code for the dialog
from .taules_tramit_dialog import TaulesTramitExproDialog
import os.path
import os


class TaulesTramitExpro:
    """QGIS Plugin Implementation."""

    def __init__(self, iface):
        """Constructor.

        :param iface: An interface instance that will be passed to this class
            which provides the hook by which you can manipulate the QGIS
            application at run time.
        :type iface: QgsInterface
        """
        # Save reference to the QGIS interface
        self.iface = iface
        # initialize plugin directory
        self.plugin_dir = os.path.dirname(__file__)
        # initialize locale
        locale = QSettings().value('locale/userLocale')[0:2]
        locale_path = os.path.join(
            self.plugin_dir,
            'i18n',
            'TaulesTramitExpro_{}.qm'.format(locale))

        if os.path.exists(locale_path):
            self.translator = QTranslator()
            self.translator.load(locale_path)
            QCoreApplication.installTranslator(self.translator)

        # Declare instance attributes
        self.actions = []
        self.menu = self.tr(u'&Taules tràmit expropiacions')

        # Check if plugin was started the first time in current QGIS session
        # Must be set in initGui() to survive plugin reloads
        self.first_start = None

    # noinspection PyMethodMayBeStatic
    def tr(self, message):
        """Get the translation for a string using Qt translation API.

        We implement this ourselves since we do not inherit QObject.

        :param message: String for translation.
        :type message: str, QString

        :returns: Translated version of message.
        :rtype: QString
        """
        # noinspection PyTypeChecker,PyArgumentList,PyCallByClass
        return QCoreApplication.translate('TaulesTramitExpro', message)


    def add_action(
        self,
        icon_path,
        text,
        callback,
        enabled_flag=True,
        add_to_menu=True,
        add_to_toolbar=True,
        status_tip=None,
        whats_this=None,
        parent=None):
        """Add a toolbar icon to the toolbar.

        :param icon_path: Path to the icon for this action. Can be a resource
            path (e.g. ':/plugins/foo/bar.png') or a normal file system path.
        :type icon_path: str

        :param text: Text that should be shown in menu items for this action.
        :type text: str

        :param callback: Function to be called when the action is triggered.
        :type callback: function

        :param enabled_flag: A flag indicating if the action should be enabled
            by default. Defaults to True.
        :type enabled_flag: bool

        :param add_to_menu: Flag indicating whether the action should also
            be added to the menu. Defaults to True.
        :type add_to_menu: bool

        :param add_to_toolbar: Flag indicating whether the action should also
            be added to the toolbar. Defaults to True.
        :type add_to_toolbar: bool

        :param status_tip: Optional text to show in a popup when mouse pointer
            hovers over the action.
        :type status_tip: str

        :param parent: Parent widget for the new action. Defaults None.
        :type parent: QWidget

        :param whats_this: Optional text to show in the status bar when the
            mouse pointer hovers over the action.

        :returns: The action that was created. Note that the action is also
            added to self.actions list.
        :rtype: QAction
        """

        icon = QIcon(icon_path)
        action = QAction(icon, text, parent)
        action.triggered.connect(callback)
        action.setEnabled(enabled_flag)

        if status_tip is not None:
            action.setStatusTip(status_tip)

        if whats_this is not None:
            action.setWhatsThis(whats_this)

        if add_to_toolbar:
            # Adds plugin icon to Plugins toolbar
            self.iface.addToolBarIcon(action)

        if add_to_menu:
            self.iface.addPluginToMenu(
                self.menu,
                action)

        self.actions.append(action)

        return action

    def initGui(self):
        """Create the menu entries and toolbar icons inside the QGIS GUI."""

        icon_path = ':/plugins/taules_tramit/icon.png'
        self.add_action(
            icon_path,
            text=self.tr(u'Gestiona les taules de les expropiacions'),
            callback=self.run,
            parent=self.iface.mainWindow())

        # will be set False in run()
        self.first_start = True


    def unload(self):
        """Removes the plugin menu item and icon from QGIS GUI."""
        for action in self.actions:
            self.iface.removePluginMenu(
                self.tr(u'&Taules tràmit expropiacions'),
                action)
            self.iface.removeToolBarIcon(action)
    
    def select_gpkg_file(self):
        filename, _filter = QFileDialog.getOpenFileName(
            self.dlg, "Select   output file ","", '*.gpkg')
        self.dlg.lineEdit.setText(filename)  


    def run(self):
        """Run method that performs all the real work"""

        # Create the dialog with elements (after translation) and keep reference
        # Only create GUI ONCE in callback, so that it will only load when the plugin is started
        if self.first_start == True:
            self.first_start = False
            self.dlg = TaulesTramitExproDialog()
            self.dlg.pushButton.clicked.connect(self.select_gpkg_file)
        
        # show the dialog
        self.dlg.show()
        # Run the dialog event loop
        result = self.dlg.exec_()
        # See if OK was pressed
        if result:
            # Do something useful here - delete the line containing pass and
            # substitute with your code.

            filename = self.dlg.lineEdit.text()
            gpkg_path = filename
            if not gpkg_path:
                QMessageBox.warning(iface.mainWindow(), "Advertència", "El camí del fitxer no està establert. Si us plau, introdueix un camí vàlid.")
            else:
                md = QgsProviderRegistry.instance().providerMetadata("ogr")
                conn = md.createConnection(filename, {})

                def canviar_triggers():
                    sql_queries = [
                    "DROP TRIGGER IF EXISTS update_sup_after_update_EXP;",
                    "CREATE TRIGGER update_sup_after_update_EXP AFTER UPDATE OF geom ON EXP FOR EACH ROW BEGIN UPDATE EXP SET sup_exp_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",
                    "DROP TRIGGER IF EXISTS update_sup_before_insert_EXP;",
                    "CREATE TRIGGER update_sup_before_insert_EXP AFTER INSERT ON EXP FOR EACH ROW BEGIN UPDATE EXP SET sup_exp_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",

                    "DROP TRIGGER IF EXISTS update_sup_after_update_OT; ",
                    "CREATE TRIGGER update_sup_after_update_OT AFTER UPDATE OF geom ON OT FOR EACH ROW BEGIN UPDATE OT SET sup_ot_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",
                    "DROP TRIGGER IF EXISTS update_sup_before_insert_OT;",
                    "CREATE TRIGGER update_sup_before_insert_OT AFTER INSERT ON OT FOR EACH ROW BEGIN UPDATE OT SET sup_ot_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",

                    "DROP TRIGGER IF EXISTS update_sup_after_update_ACC;",
                    "CREATE TRIGGER update_sup_after_update_ACC AFTER UPDATE OF geom ON SERV_ACC FOR EACH ROW BEGIN UPDATE SERV_ACC SET sup_serv_tram = round(ST_Area(NEW.geom),0)WHERE fid = NEW.fid; END",
                    "DROP TRIGGER IF EXISTS update_sup_before_insert_ACC;",
                    "CREATE TRIGGER update_sup_before_insert_ACC AFTER INSERT ON SERV_ACC FOR EACH ROW BEGIN UPDATE SERV_ACC SET sup_serv_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",

                    "DROP TRIGGER IF EXISTS update_sup_after_update_LEA;",
                    "CREATE TRIGGER update_sup_after_update_LEA AFTER UPDATE OF geom ON SERV_LEA FOR EACH ROW BEGIN UPDATE SERV_LEA SET sup_serv_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",
                    "DROP TRIGGER IF EXISTS update_sup_before_insert_LEA;",
                    "CREATE TRIGGER update_sup_before_insert_LEA AFTER INSERT ON SERV_LEA FOR EACH ROW BEGIN UPDATE SERV_LEA SET sup_serv_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",

                    "DROP TRIGGER IF EXISTS update_sup_after_update_LES;",
                    "CREATE TRIGGER update_sup_after_update_LES AFTER UPDATE OF geom ON SERV_LES FOR EACH ROW BEGIN UPDATE SERV_LES SET sup_serv_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",
                    "DROP TRIGGER IF EXISTS update_sup_before_insert_LES;",
                    "CREATE TRIGGER update_sup_before_insert_LES AFTER INSERT ON SERV_LES FOR EACH ROW BEGIN UPDATE SERV_LES SET sup_serv_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",

                    "DROP TRIGGER IF EXISTS update_sup_after_update_PLU;",
                    "CREATE TRIGGER update_sup_after_update_PLU AFTER UPDATE OF geom ON SERV_PLU FOR EACH ROW BEGIN UPDATE SERV_PLU SET sup_serv_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",
                    "DROP TRIGGER IF EXISTS update_sup_before_insert_PLU; ",
                    "CREATE TRIGGER update_sup_before_insert_PLU AFTER INSERT ON SERV_PLU FOR EACH ROW BEGIN UPDATE SERV_PLU SET sup_serv_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",

                    "DROP TRIGGER IF EXISTS update_sup_after_update_POT;",
                    "CREATE TRIGGER update_sup_after_update_POT AFTER UPDATE OF geom ON SERV_POT FOR EACH ROW BEGIN UPDATE SERV_POT SET sup_serv_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",
                    "DROP TRIGGER IF EXISTS update_sup_before_insert_POT;",
                    "CREATE TRIGGER update_sup_before_insert_POT AFTER INSERT ON SERV_POT FOR EACH ROW BEGIN UPDATE SERV_POT SET sup_serv_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",

                    "DROP TRIGGER IF EXISTS update_sup_after_update_REG;",
                    "CREATE TRIGGER update_sup_after_update_REG AFTER UPDATE OF geom ON SERV_REG FOR EACH ROW BEGIN UPDATE SERV_REG SET sup_serv_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",
                    "DROP TRIGGER IF EXISTS update_sup_before_insert_REG;",
                    "CREATE TRIGGER update_sup_before_insert_REG AFTER INSERT ON SERV_REG FOR EACH ROW BEGIN UPDATE SERV_REG SET sup_serv_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",

                    "DROP TRIGGER IF EXISTS update_sup_after_update_RES;",
                    "CREATE TRIGGER update_sup_after_update_RES AFTER UPDATE OF geom ON SERV_RES FOR EACH ROW BEGIN UPDATE SERV_RES SET sup_serv_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",
                    "DROP TRIGGER IF EXISTS update_sup_before_insert_RES;",
                    "CREATE TRIGGER update_sup_before_insert_RES AFTER INSERT ON SERV_RES FOR EACH ROW BEGIN UPDATE SERV_RES SET sup_serv_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",

                    "DROP TRIGGER IF EXISTS update_sup_after_update_SAL;",
                    "CREATE TRIGGER update_sup_after_update_SAL AFTER UPDATE OF geom ON SERV_SAL FOR EACH ROW BEGIN UPDATE SERV_SAL SET sup_serv_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",
                    "DROP TRIGGER IF EXISTS update_sup_before_insert_SAL;",
                    "CREATE TRIGGER update_sup_before_insert_SAL AFTER INSERT ON SERV_SAL FOR EACH ROW BEGIN UPDATE SERV_SAL SET sup_serv_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",

                    "DROP TRIGGER IF EXISTS update_sup_after_update_TCA;",
                    "CREATE TRIGGER update_sup_after_update_TCA AFTER UPDATE OF geom ON SERV_TCA FOR EACH ROW BEGIN UPDATE SERV_TCA SET sup_serv_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",
                    "DROP TRIGGER IF EXISTS update_sup_before_insert_TCA;",
                    "CREATE TRIGGER update_sup_before_insert_TCA AFTER INSERT ON SERV_TCA FOR EACH ROW BEGIN UPDATE SERV_TCA SET sup_serv_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",

                    "DROP TRIGGER IF EXISTS update_sup_after_update_TCS;",
                    "CREATE TRIGGER update_sup_after_update_TCS AFTER UPDATE OF geom ON SERV_TCS FOR EACH ROW BEGIN UPDATE SERV_TCS SET sup_serv_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END",
                    "DROP TRIGGER IF EXISTS update_sup_before_insert_TCS;",
                    "CREATE TRIGGER update_sup_before_insert_TCS AFTER INSERT ON SERV_TCS FOR EACH ROW BEGIN UPDATE SERV_TCS SET sup_serv_tram = round(ST_Area(NEW.geom),0) WHERE fid = NEW.fid; END"
                    ]

                    try:
                        for query in sql_queries:
                            conn.executeSql(query)
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error SQL", f"Error a l'executar l'ordre SQL: {e}")

                def generar_dades_generals():
            
                    sql_queries = [
                    """
                    delete from gpkg_contents where table_name is 'dades_generals';
                    """,
                    """
                    insert into gpkg_contents (table_name, data_type, identifier, description, last_change)
                    values ('dades_generals', 'attributes', 'dades_generals', 'dades comuns a tots els expedients', strftime('%Y-%m-%dT%H:%M:%fZ', 'now'));
                    """,
                    """
                    create table dades_generals(
                    fid INTEGER PRIMARY KEY AUTOINCREMENT, clauproj TEXT, titol_proj TEXT, clauproj_exp TEXT, procediment TEXT(8), data_aprovacio TEXT, num_DOGC_IP_APO INT, data_DOGC_IP_APO TEXT(10), nom_diari_1_IP_APO TEXT(25), data_diari_1_IP_APO TEXT(10), nom_diari_2_IP_APO TEXT(25), data_diari_2_IP_APO TEXT(10), temps_obra TEXT(25)
                    );
                    """,
                    """
                    CREATE TRIGGER "trigger_insert_feature_count_dades_generals" AFTER INSERT ON "dades_generals" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('dades_generals'); END
                    """,
                    """
                    CREATE TRIGGER "trigger_delete_feature_count_dades_generals" AFTER DELETE ON "dades_generals" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('dades_generals'); END
                    """,
                    """
                    insert into dades_generals (procediment) values ("urgència");
                    """
                    ]
                    try:
                        for query in sql_queries:
                            conn.executeSql(query)
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error SQL", f"Error a l'executar l'ordre SQL: {e}")

                    file_name = gpkg_path + '|layername=dades_generals'
                    layer_name = 'dades_generals'
                    dades_generals = QgsVectorLayer(file_name,layer_name,'ogr')
                                    
                    QgsProject.instance().addMapLayer(dades_generals)
                    
                def generar_dades_tramit():
            
                    sql_queries = [
                    """
                    delete from gpkg_contents where table_name is 'dades_tramit';
                    """ ,
                    """
                    insert into gpkg_contents (table_name, data_type, identifier, description, last_change)
                    values ('dades_tramit', 'attributes', 'dades_tramit', 'recull de tota la tramitació', strftime('%Y-%m-%dT%H:%M:%fZ', 'now'));
                    """,
                    """
                    create table dades_tramit(
                    fid INTEGER PRIMARY KEY AUTOINCREMENT, clauproj_exp TEXT, data_fi TEXT, demanial TEXT (2), num_finca TEXT, muni TEXT, refcad_origen TEXT (14), pol TEXT, parce TEXT, qual_fiscal TEXT, parce_termenal_N TEXT, parce_termenal_S TEXT, parce_termenal_E TEXT, parce_termenal_O TEXT, titular_cad_1 TEXT, titular_cad_2 TEXT, titular_cad_3 TEXT, sup_cad_parce INT, valor_cadastral REAL, pers_fis_jurid TEXT, titular_1 TEXT, titular_2 TEXT, titular_3 TEXT, adresa_1 TEXT, adresa_2 TEXT, adresa_3 TEXT, tel_1 TEXT, tel_2 TEXT, tel_3 TEXT, email_1 TEXT, email_2 TEXT, email_3 TEXT, titulars_compareixen_APO TEXT, titulars_signen_APO TEXT, representant_ajunt_APO TEXT, representant_admin_APO TEXT, perit_APO TEXT, lloc_APO TEXT, data_APO TEXT, registral_origen TEXT, tom TEXT, llibre TEXT, full TEXT, inscripcio TEXT, data_inscripcio TEXT, sup_registral TEXT, sup_registral_1 TEXT, registre_prop TEXT, dades_urb TEXT, sup_exp INT, sup_res INT, sup_pot INT, sup_les INT, sup_lea INT, sup_tcs INT, sup_tca INT, sup_acc INT, sup_plu INT, sup_reg TEXT, sup_sal TEXT, sup_serv INT, sup_ot INT, descripcio_APO TEXT, manifestacions_APO TEXT, lloc_AO TEXT, data_AO TEXT, titulars_compareixen_AO TEXT, titulars_signen_AO TEXT, representant_ajunt_AO TEXT, secretari_ajunt_AO TEXT, representant_admin_AO TEXT, perit_AO TEXT, import_DPO REAL, import_PRO REAL, num_xec_AO TEXT, percebut_AO TEXT, observacions_AO TEXT, notificacio_consigna_AO TEXT, sol_desconsinar_AO_prop TEXT, recuperar_imports_AO TEXT, data_resolucio_desconsigna_AO TEXT, lloc_MA TEXT, data_MA TEXT, descripcio_MA TEXT, titulars_compareixen_MA TEXT, representant_admin_MA TEXT, perit_MA TEXT, titulars_signen_MA TEXT, import_JustPreu REAL, import_JustPreu_lletres TEXT, import_exp REAL, import_serv REAL, import_ot REAL, import_const_inst REAL, import_vol REAL, import_perj REAL, import_xec_APOD REAL, observacions_MA TEXT, data_requ_FA_prop TEXT, data_reit_requ_FA_prop TEXT, data_FA_prop TEXT, FA_admin TEXT, data_enviament_FA_admin TEXT, data_rebuig_FA_propietat TEXT, data_enviament_fiscal TEXT, personacio_fiscal TEXT, FA_admin_JEC_fiscal TEXT, expedient_jurat TEXT, data_enviament_expedient_jurat TEXT, data_comunicacio_trasllat_jurat TEXT, data_resolució_jurat TEXT, num_xec_APOD TEXT, lloc_APOD TEXT, data_APOD TEXT, titulars_compareixen_APOD TEXT, titulars_signen_APOD TEXT, perit_APOD TEXT, representant_admin_APOD TEXT, descripcio_registral TEXT, titol_registral TEXT, afeccio_registral TEXT, observacions_APOD TEXT, percebut_APOD TEXT, notificacio_consigna_APOD TEXT, sol_desconsinar_APOD_prop TEXT, recuperar_imports_APOD TEXT, data_resolucio_desconsigna_APOD TEXT, num_xec_conc TEXT, import_quant_conc REAL, import_xec_conc REAL, lloc_APOD_conc TEXT, data_APOD_conc TEXT, titulars_compareixen_APOD_conc TEXT, tiulars_signen_APOD_conc TEXT, observacions_APOD_conc TEXT, percebut_conc TEXT, notificacio_consigna_conc TEXT, num_xec_demora TEXT, import_xec_demora REAL, lloc_APOD_demora TEXT, data_APOD_demora TEXT, titulars_compareixen_APOD_demora TEXT, tiulars_signen_APOD_demora TEXT, observacions_APOD_demora TEXT, percebut_demora TEXT, notificacio_consigna_demora TEXT, data_recurs TEXT, data_traspas_daj TEXT, descripcio_COMP TEXT, lloc_COMP TEXT, data_COMP TEXT, titulars_compareixen_COMP TEXT, representant_admin_COMP TEXT, perit_COMP TEXT, titulars_signen_COMP TEXT, observacions_COMP TEXT
                    );
                    """,
                    """
                    CREATE TRIGGER "trigger_insert_feature_count_dades_tramit" AFTER INSERT ON "dades_tramit" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('dades_tramit'); END
                    """,
                    """
                    CREATE TRIGGER "trigger_delete_feature_count_dades_tramit" AFTER DELETE ON "dades_tramit" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('dades_tramit'); END
                    """
                    ]

                    try:
                        for query in sql_queries:
                            conn.executeSql(query)
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error SQL", f"Error a l'executar l'ordre SQL: {e}")

                    file_name = gpkg_path + '|layername=dades_tramit'
                    layer_name = 'dades_tramit'
                    dades_tramit = QgsVectorLayer(file_name,layer_name,'ogr')
                                    
                    QgsProject.instance().addMapLayer(dades_tramit)

                def generar_taula_tramit_APO():
                    sql_queries = [
                        "DELETE FROM gpkg_contents WHERE table_name = 'taula_tramit_APO';",
                        """
                        INSERT INTO gpkg_contents (table_name, data_type, identifier, description, last_change)
                        VALUES ('taula_tramit_APO', 'attributes', 'taula_tramit_APO', 'taula tramitació actes prèvies', strftime('%Y-%m-%dT%H:%M:%fZ', 'now'));
                        """,
                        """
                        CREATE TABLE taula_tramit_APO(
                        fid INTEGER PRIMARY KEY AUTOINCREMENT, titol_proj TEXT, clauproj_exp TEXT, procediment TEXT(8), data_aprovacio TEXT, num_DOGC_IP_APO INT, data_DOGC_IP_APO TEXT(10), nom_diari_1_IP_APO TEXT(25), data_diari_1_IP_APO TEXT(10), nom_diari_2_IP_APO TEXT(25), data_diari_2_IP_APO TEXT(10), temps_obra TEXT(25), demanial TEXT(2), num_finca TEXT, muni TEXT, pol TEXT, parce TEXT, qual_fiscal TEXT, parce_termenal_N TEXT, parce_termenal_S TEXT, parce_termenal_E TEXT, parce_termenal_O TEXT, titular_cad_1 TEXT, titular_cad_2 TEXT, titular_cad_3 TEXT, sup_cad_parce MEDIUMINT, valor_cadastral REAL, pers_fis_jurid TEXT, titular_1 TEXT, titular_2 TEXT, titular_3 TEXT, adresa_1 TEXT, adresa_2 TEXT, adresa_3 TEXT, tel_1 TEXT, tel_2 TEXT, tel_3 TEXT, email_1 TEXT, email_2 TEXT, email_3 TEXT, titulars_compareixen_APO TEXT, titulars_signen_APO TEXT, representant_ajunt_APO TEXT, representant_admin_APO TEXT, perit_APO TEXT, lloc_APO TEXT, data_APO TEXT, registral_origen TEXT, tom TEXT, llibre TEXT, full TEXT, inscripcio TEXT, data_inscripcio TEXT, registre_prop TEXT, sup_registral TEXT, dades_urb TEXT, sup_exp MEDIUMINT, sup_res MEDIUMINT, sup_pot MEDIUMINT, sup_les MEDIUMINT, sup_lea MEDIUMINT, sup_tcs MEDIUMINT, sup_tca MEDIUMINT, sup_acc MEDIUMINT, sup_plu MEDIUMINT, sup_reg MEDIUMINT, sup_sal MEDIUMINT, sup_ot MEDIUMINT, sup_serv MEDIUMINT, descripcio_APO TEXT, manifestacions_APO TEXT, editat TEXT(2)
                        );
                        """,
                        """
                        CREATE TRIGGER "trigger_insert_feature_count_taula_tramit_APO" AFTER INSERT ON "taula_tramit_APO" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('taula_tramit_APO'); END;
                        """,
                        """
                        CREATE TRIGGER "trigger_delete_feature_count_taula_tramit_APO" AFTER DELETE ON "taula_tramit_APO" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('taula_tramit_APO'); END;
                        """,
                        """
                        INSERT INTO taula_tramit_APO (titol_proj, clauproj_exp, procediment, data_aprovacio, num_DOGC_IP_APO, data_DOGC_IP_APO, nom_diari_1_IP_APO, data_diari_1_IP_APO, nom_diari_2_IP_APO, data_diari_2_IP_APO, temps_obra, demanial, num_finca, muni, pol, parce, qual_fiscal, parce_termenal_N, parce_termenal_S, parce_termenal_E, parce_termenal_O, titular_cad_1, titular_cad_2, titular_cad_3, sup_cad_parce, valor_cadastral, pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, titulars_compareixen_APO, titulars_signen_APO, representant_ajunt_APO, representant_admin_APO, perit_APO, lloc_APO, data_APO, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, registre_prop, sup_registral, dades_urb, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_ot, sup_serv, descripcio_APO, manifestacions_APO)
                        SELECT dg.titol_proj, dg.clauproj_exp, dg.procediment, dg.data_aprovacio, dg.num_DOGC_IP_APO, dg.data_DOGC_IP_APO, dg.nom_diari_1_IP_APO, dg.data_diari_1_IP_APO, dg.nom_diari_2_IP_APO, dg.data_diari_2_IP_APO, dg.temps_obra, dt.demanial, dt.num_finca, dt.muni, dt.pol, dt.parce, dt.qual_fiscal, dt.parce_termenal_N, dt.parce_termenal_S, dt.parce_termenal_E, dt.parce_termenal_O, dt.titular_cad_1, dt.titular_cad_2, dt.titular_cad_3, dt.sup_cad_parce, dt.valor_cadastral, dt.pers_fis_jurid, dt.titular_1, dt.titular_2, dt.titular_3, dt.adresa_1, dt.adresa_2, dt.adresa_3, dt.tel_1, dt.tel_2, dt.tel_3, dt.email_1, dt.email_2, dt.email_3, dt.titulars_compareixen_APO, dt.titulars_signen_APO, dt.representant_ajunt_APO, dt.representant_admin_APO, dt.perit_APO, dt.lloc_APO, dt.data_APO, dt.registral_origen, dt.tom, dt.llibre, dt.full, dt.inscripcio, dt.data_inscripcio, dt.registre_prop, dt.sup_registral, dt.dades_urb, dt.sup_exp, dt.sup_res, dt.sup_pot, dt.sup_les, dt.sup_lea, dt.sup_tcs, dt.sup_tca, dt.sup_acc, dt.sup_plu, dt.sup_reg, dt.sup_sal, dt.sup_ot, dt.sup_serv, dt.descripcio_APO, dt.manifestacions_APO
                        FROM dades_generals as dg
                        INNER JOIN dades_tramit as dt ON dg.clauproj_exp = dt.clauproj_exp
                        ORDER BY dt.num_finca;
                        """
                    ]

                    try:
                        for query in sql_queries:
                            conn.executeSql(query)
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error SQL", f"Error a l'executar l'ordre SQL: {e}")

                    file_name = gpkg_path + '|layername=taula_tramit_APO'
                    layer_name = 'taula_tramit_APO'
                    taula_tramit_APO = QgsVectorLayer(file_name, layer_name, 'ogr')

                    # Crear una configuració de formulari d'edició
                    form_config = QgsEditFormConfig()
                    form_config.setUiForm(self.plugin_dir + '\\formularis/Taula_APO.ui')

                    # Assignar la configuració de formulari a la capa
                    taula_tramit_APO.setEditFormConfig(form_config)

                    QgsProject.instance().addMapLayer(taula_tramit_APO)

                def act_dades_tramit_desde_APO():
        
                    sql_query = """
                    UPDATE dades_tramit
                    SET (
                    demanial,num_finca,muni,pol,parce,qual_fiscal,parce_termenal_N,parce_termenal_S,parce_termenal_E,parce_termenal_O,titular_cad_1,titular_cad_2,titular_cad_3,sup_cad_parce,valor_cadastral,pers_fis_jurid,titular_1,titular_2,titular_3,adresa_1,adresa_2,adresa_3,tel_1,tel_2,tel_3,email_1,email_2,email_3,titulars_compareixen_APO,titulars_signen_APO,representant_ajunt_APO,representant_admin_APO,perit_APO,lloc_APO,data_APO,registral_origen,tom,llibre,full,inscripcio,data_inscripcio,registre_prop,sup_registral,dades_urb,sup_exp,sup_res,sup_pot,sup_les,sup_lea,sup_tcs,sup_tca,sup_acc,sup_plu,sup_reg,sup_sal,sup_ot,sup_serv,descripcio_APO,manifestacions_APO
                    ) =
                    (
                    SELECT
                    demanial,num_finca,muni,pol,parce,qual_fiscal,parce_termenal_N,parce_termenal_S,parce_termenal_E,parce_termenal_O,titular_cad_1,titular_cad_2,titular_cad_3,sup_cad_parce,valor_cadastral,pers_fis_jurid,titular_1,titular_2,titular_3,adresa_1,adresa_2,adresa_3,tel_1,tel_2,tel_3,email_1,email_2,email_3,titulars_compareixen_APO,titulars_signen_APO,representant_ajunt_APO,representant_admin_APO,perit_APO,lloc_APO,data_APO,registral_origen,tom,llibre,full,inscripcio,data_inscripcio,registre_prop,sup_registral,dades_urb,sup_exp,sup_res,sup_pot,sup_les,sup_lea,sup_tcs,sup_tca,sup_acc,sup_plu,sup_reg,sup_sal,sup_ot,sup_serv,descripcio_APO,manifestacions_APO
                    FROM taula_tramit_APO
                    WHERE taula_tramit_APO.num_finca = dades_tramit.num_finca
                    )
                    WHERE EXISTS (
                    SELECT* FROM taula_tramit_APO WHERE taula_tramit_APO.num_finca = dades_tramit.num_finca
                    )
                    """
                    try:
                        conn.executeSql(sql_query)
                        QMessageBox.information(iface.mainWindow(), "Success", "La taula dades_tramit s'ha actualitzat.")
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error SQL", f"Error a l'executar l'ordre SQL: {e}")

                def combinar_APO_1_APO_2():
                    sql_queries = [
                        "DELETE FROM gpkg_contents WHERE table_name = 'taula_tramit_APO';",
                        """
                        INSERT INTO gpkg_contents (table_name, data_type, identifier, description, last_change)
                        VALUES ('taula_tramit_APO', 'attributes', 'taula_tramit_APO', 'taula tramitació  actes prèvies', strftime('%Y-%m-%dT%H:%M:%fZ', 'now'));
                        """,
                        """
                        CREATE TABLE taula_tramit_APO(
                        fid INTEGER PRIMARY KEY AUTOINCREMENT, titol_proj TEXT, clauproj_exp TEXT, procediment TEXT(8), data_aprovacio TEXT, num_DOGC_IP_APO INT, data_DOGC_IP_APO TEXT(10), nom_diari_1_IP_APO TEXT(25), data_diari_1_IP_APO TEXT(10), nom_diari_2_IP_APO TEXT(25), data_diari_2_IP_APO TEXT(10), temps_obra TEXT(25), demanial TEXT(2), num_finca TEXT, muni TEXT, pol TEXT, parce TEXT, qual_fiscal TEXT, parce_termenal_N TEXT, parce_termenal_S TEXT, parce_termenal_E TEXT, parce_termenal_O TEXT, titular_cad_1 TEXT, titular_cad_2 TEXT, titular_cad_3 TEXT, sup_cad_parce MEDIUMINT, valor_cadastral REAL, pers_fis_jurid TEXT, titular_1 TEXT, titular_2 TEXT, titular_3 TEXT, adresa_1 TEXT, adresa_2 TEXT, adresa_3 TEXT, tel_1 TEXT, tel_2 TEXT, tel_3 TEXT, email_1 TEXT, email_2 TEXT, email_3 TEXT, titulars_compareixen_APO TEXT, titulars_signen_APO TEXT, representant_ajunt_APO TEXT, representant_admin_APO TEXT, perit_APO TEXT, lloc_APO TEXT, data_APO TEXT, registral_origen TEXT, tom TEXT, llibre TEXT, full TEXT, inscripcio TEXT, data_inscripcio TEXT, registre_prop TEXT, sup_registral TEXT, dades_urb TEXT, sup_exp MEDIUMINT, sup_res MEDIUMINT, sup_pot MEDIUMINT, sup_les MEDIUMINT, sup_lea MEDIUMINT, sup_tcs MEDIUMINT, sup_tca MEDIUMINT, sup_acc MEDIUMINT, sup_plu MEDIUMINT, sup_reg MEDIUMINT, sup_sal MEDIUMINT, sup_ot MEDIUMINT, sup_serv MEDIUMINT, descripcio_APO TEXT, manifestacions_APO TEXT
                        );
                        """,
                        """
                        CREATE TRIGGER "trigger_insert_feature_count_taula_tramit_APO" AFTER INSERT ON "taula_tramit_APO" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('taula_tramit_APO'); END;
                        """,
                        """
                        CREATE TRIGGER "trigger_delete_feature_count_taula_tramit_APO" AFTER DELETE ON "taula_tramit_APO" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('taula_tramit_APO'); END;
                        """,
                        """
                        INSERT INTO taula_tramit_APO (titol_proj, clauproj_exp, procediment, data_aprovacio, num_DOGC_IP_APO, data_DOGC_IP_APO, nom_diari_1_IP_APO, data_diari_1_IP_APO, nom_diari_2_IP_APO, data_diari_2_IP_APO, temps_obra, demanial, num_finca, muni, pol, parce, qual_fiscal, parce_termenal_N, parce_termenal_S, parce_termenal_E, parce_termenal_O, titular_cad_1, titular_cad_2, titular_cad_3, sup_cad_parce, valor_cadastral, pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, titulars_compareixen_APO, titulars_signen_APO, representant_ajunt_APO, representant_admin_APO, perit_APO, lloc_APO, data_APO, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, registre_prop, sup_registral, dades_urb, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_ot, sup_serv, descripcio_APO, manifestacions_APO)
                        SELECT apo1.titol_proj, apo1.clauproj_exp, apo1.procediment, apo1.data_aprovacio, apo1.num_DOGC_IP_APO, apo1.data_DOGC_IP_APO, apo1.nom_diari_1_IP_APO, apo1.data_diari_1_IP_APO, apo1.nom_diari_2_IP_APO, apo1.data_diari_2_IP_APO, apo1.temps_obra, apo1.demanial, apo1.num_finca, apo1.muni, apo1.pol, apo1.parce, apo1.qual_fiscal, apo1.parce_termenal_N, apo1.parce_termenal_S, apo1.parce_termenal_E, apo1.parce_termenal_O, apo1.titular_cad_1, apo1.titular_cad_2, apo1.titular_cad_3, apo1.sup_cad_parce, apo1.valor_cadastral, apo1.pers_fis_jurid, apo1.titular_1, apo1.titular_2, apo1.titular_3, apo1.adresa_1, apo1.adresa_2, apo1.adresa_3, apo1.tel_1, apo1.tel_2, apo1.tel_3, apo1.email_1, apo1.email_2, apo1.email_3, apo1.titulars_compareixen_APO, apo1.titulars_signen_APO, apo1.representant_ajunt_APO, apo1.representant_admin_APO, apo1.perit_APO, apo1.lloc_APO, apo1.data_APO, apo1.registral_origen, apo1.tom, apo1.llibre, apo1.full, apo1.inscripcio, apo1.data_inscripcio, apo1.registre_prop, apo1.sup_registral, apo1.dades_urb, apo1.sup_exp, apo1.sup_res, apo1.sup_pot, apo1.sup_les, apo1.sup_lea, apo1.sup_tcs, apo1.sup_tca, apo1.sup_acc, apo1.sup_plu, apo1.sup_reg, apo1.sup_sal, apo1.sup_ot, apo1.sup_serv, apo1.descripcio_APO, apo1.manifestacions_APO
                        FROM taula_tramit_APO_1 as apo1 where editat IN ('si', 'Si', 'SI', 'sí', 'Sí', 'SÍ')
                        UNION
                        SELECT apo2.titol_proj, apo2.clauproj_exp, apo2.procediment, apo2.data_aprovacio, apo2.num_DOGC_IP_APO, apo2.data_DOGC_IP_APO, apo2.nom_diari_1_IP_APO, apo2.data_diari_1_IP_APO, apo2.nom_diari_2_IP_APO, apo2.data_diari_2_IP_APO, apo2.temps_obra, apo2.demanial, apo2.num_finca, apo2.muni, apo2.pol, apo2.parce, apo2.qual_fiscal, apo2.parce_termenal_N, apo2.parce_termenal_S, apo2.parce_termenal_E, apo2.parce_termenal_O, apo2.titular_cad_1, apo2.titular_cad_2, apo2.titular_cad_3, apo2.sup_cad_parce, apo2.valor_cadastral, apo2.pers_fis_jurid, apo2.titular_1, apo2.titular_2, apo2.titular_3, apo2.adresa_1, apo2.adresa_2, apo2.adresa_3, apo2.tel_1, apo2.tel_2, apo2.tel_3, apo2.email_1, apo2.email_2, apo2.email_3, apo2.titulars_compareixen_APO, apo2.titulars_signen_APO, apo2.representant_ajunt_APO, apo2.representant_admin_APO, apo2.perit_APO, apo2.lloc_APO, apo2.data_APO, apo2.registral_origen, apo2.tom, apo2.llibre, apo2.full, apo2.inscripcio, apo2.data_inscripcio, apo2.registre_prop, apo2.sup_registral, apo2.dades_urb, apo2.sup_exp, apo2.sup_res, apo2.sup_pot, apo2.sup_les, apo2.sup_lea, apo2.sup_tcs, apo2.sup_tca, apo2.sup_acc, apo2.sup_plu, apo2.sup_reg, apo2.sup_sal, apo2.sup_ot, apo2.sup_serv, apo2.descripcio_APO, apo2.manifestacions_APO
                        FROM taula_tramit_APO_2 as apo2 where editat IN ('si', 'Si', 'SI', 'sí', 'Sí', 'SÍ')
                        ORDER BY num_finca;
                        """
                    ]

                    try:
                        for query in sql_queries:
                            conn.executeSql(query)
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error SQL", f"Error a l'executar l'ordre SQL: {e}")

                    file_name = gpkg_path + '|layername=taula_tramit_APO'
                    layer_name = 'taula_tramit_APO'
                    taula_tramit_APO = QgsVectorLayer(file_name, layer_name, 'ogr')

                    # Crear una configuració de formulari d'edició
                    form_config = QgsEditFormConfig()
                    form_config.setUiForm(self.plugin_dir + '\\formularis/Taula_APO.ui')

                    # Assignar la configuració de formulari a la capa
                    taula_tramit_APO.setEditFormConfig(form_config)

                    QgsProject.instance().addMapLayer(taula_tramit_APO)

                def generar_taula_tramit_AO():
                    sql_queries = [
                        "DELETE FROM gpkg_contents WHERE table_name = 'taula_tramit_AO';",
                        """
                        INSERT INTO gpkg_contents (table_name, data_type, identifier, description, last_change)
                        VALUES ('taula_tramit_AO', 'attributes', 'taula_tramit_AO', 'taula de la tramitació actes ocupació', strftime('%Y-%m-%dT%H:%M:%fZ', 'now'));
                        """,
                        """
                        CREATE TABLE taula_tramit_AO(
                        fid INTEGER PRIMARY KEY AUTOINCREMENT,titol_proj TEXT, clauproj_exp TEXT, procediment TEXT(8), data_aprovacio TEXT, num_finca TEXT, muni TEXT, pol TEXT, parce TEXT, qual_fiscal TEXT, pers_fis_jurid TEXT, titular_1 TEXT, titular_2 TEXT, titular_3 TEXT, adresa_1 TEXT, adresa_2 TEXT, adresa_3 TEXT, tel_1 TEXT, tel_2 TEXT, tel_3 TEXT, email_1 TEXT, email_2 TEXT, email_3 TEXT, data_APO TEXT, registral_origen TEXT, tom TEXT, llibre TEXT, full TEXT, inscripcio TEXT, data_inscripcio TEXT, sup_registral TEXT, registre_prop TEXT, sup_exp MEDIUMINT, sup_res MEDIUMINT, sup_pot MEDIUMINT, sup_les MEDIUMINT, sup_lea MEDIUMINT, sup_tcs MEDIUMINT, sup_tca MEDIUMINT, sup_acc MEDIUMINT, sup_plu MEDIUMINT, sup_reg MEDIUMINT, sup_sal MEDIUMINT, sup_serv MEDIUMINT, sup_ot MEDIUMINT, lloc_APO TEXT, lloc_AO TEXT, data_AO TEXT, titulars_compareixen_AO TEXT, titulars_signen_AO TEXT, representant_ajunt_AO TEXT, secretari_ajunt_AO TEXT, representant_admin_AO TEXT, perit_AO TEXT, import_DPO REAL, import_PRO REAL, num_xec_AO TEXT, percebut_AO TEXT, observacions_AO TEXT, editat TEXT(2)
                        );
                        """,
                        """
                        CREATE TRIGGER "trigger_insert_feature_count_taula_tramit_AO" AFTER INSERT ON "taula_tramit_AO" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('taula_tramit_AO'); END;
                        """,
                        """
                        CREATE TRIGGER "trigger_delete_feature_count_taula_tramit_AO" AFTER DELETE ON "taula_tramit_AO" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('taula_tramit_AO'); END;
                        """,
                        """
                        INSERT INTO taula_tramit_AO (
                        titol_proj, clauproj_exp, procediment, data_aprovacio, num_finca, muni, pol, parce, qual_fiscal, pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, data_APO, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, sup_registral, registre_prop, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_serv, sup_ot, lloc_APO, lloc_AO, data_AO, titulars_compareixen_AO, titulars_signen_AO, representant_ajunt_AO, secretari_ajunt_AO, representant_admin_AO, perit_AO, import_DPO, import_PRO, num_xec_AO, percebut_AO, observacions_AO
                        )
                        SELECT dg.titol_proj, dg.clauproj_exp, dg.procediment, dg.data_aprovacio, dt.num_finca, dt.muni, dt.pol, dt.parce, dt.qual_fiscal, dt.pers_fis_jurid, dt.titular_1, dt.titular_2, dt.titular_3, dt.adresa_1, dt.adresa_2, dt.adresa_3, dt.tel_1, dt.tel_2, dt.tel_3, dt.email_1, dt.email_2, dt.email_3, dt.data_APO, dt.registral_origen, dt.tom, dt.llibre, dt.full, dt.inscripcio, dt.data_inscripcio, dt.sup_registral, dt.registre_prop, dt.sup_exp, dt.sup_res, dt.sup_pot, dt.sup_les, dt.sup_lea, dt.sup_tcs, dt.sup_tca, dt.sup_acc, dt.sup_plu, dt.sup_reg, dt.sup_sal, dt.sup_serv, dt.sup_ot, dt.lloc_APO, dt.lloc_AO, dt.data_AO, dt.titulars_compareixen_AO, dt.titulars_signen_AO, dt.representant_ajunt_AO, dt.secretari_ajunt_AO, dt.representant_admin_AO, dt.perit_AO, dt.import_DPO, dt.import_PRO, dt.num_xec_AO, dt.percebut_AO, dt.observacions_AO
                        FROM dades_generals as dg
                        INNER JOIN dades_tramit as dt ON dg.clauproj_exp = dt.clauproj_exp
                        order by dt.num_finca;
                        """
                    ]

                    try:
                        for query in sql_queries:
                            conn.executeSql(query)
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error SQL", f"Error a l'executar l'ordre SQL: {e}")
                        #QMessageBox.information(iface.mainWindow(), "Error SQL", f"Error a l'executar l'ordre SQL: {query}\n{e}")
                    file_name = gpkg_path + '|layername=taula_tramit_AO'
                    layer_name = 'taula_tramit_AO'
                    taula_tramit_AO = QgsVectorLayer(file_name, layer_name, 'ogr')

                    # Crear una configuració de formulari d'edició
                    form_config = QgsEditFormConfig()
                    form_config.setUiForm(self.plugin_dir + '\\formularis/Taula_AO.ui')

                    # Assignar la configuració de formulari a la capa
                    taula_tramit_AO.setEditFormConfig(form_config)

                    QgsProject.instance().addMapLayer(taula_tramit_AO)

                def act_dades_tramit_desde_AO():
        
                    sql_query = """
                    UPDATE dades_tramit
                    SET (
                    num_finca, muni, pol, parce, qual_fiscal, pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, data_APO, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, sup_registral, registre_prop, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_serv, sup_ot, lloc_APO, lloc_AO, data_AO, titulars_compareixen_AO, titulars_signen_AO, representant_ajunt_AO, secretari_ajunt_AO, representant_admin_AO, perit_AO, import_DPO, import_PRO, num_xec_AO, percebut_AO, observacions_AO
                    ) =
                    (
                    SELECT
                    num_finca, muni, pol, parce, qual_fiscal, pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, data_APO, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, sup_registral, registre_prop, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_serv, sup_ot, lloc_APO, lloc_AO, data_AO, titulars_compareixen_AO, titulars_signen_AO, representant_ajunt_AO, secretari_ajunt_AO, representant_admin_AO, perit_AO, import_DPO, import_PRO, num_xec_AO, percebut_AO, observacions_AO
                    FROM taula_tramit_AO
                    WHERE taula_tramit_AO.num_finca = dades_tramit.num_finca
                    )
                    WHERE EXISTS (
                    SELECT* FROM taula_tramit_AO WHERE taula_tramit_AO.num_finca = dades_tramit.num_finca
                    )
                    """
                    try:
                        conn.executeSql(sql_query)
                        QMessageBox.information(iface.mainWindow(), "Success", "La taula dades_tramit s'ha actualitzat.")
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error", f"Error a l'executar l'ordre SQL: {e}")

                def combinar_AO_1_AO_2():
                    sql_queries = [
                    "DELETE FROM gpkg_contents WHERE table_name = 'taula_tramit_AO';",
                    """
                    INSERT INTO gpkg_contents (table_name, data_type, identifier, description, last_change)
                    VALUES ('taula_tramit_AO', 'attributes', 'taula_tramit_AO', 'taula tramitació  actes ocupacio', strftime('%Y-%m-%dT%H:%M:%fZ', 'now'));
                    """,
                    """
                    CREATE TABLE taula_tramit_AO(
                    fid INTEGER PRIMARY KEY AUTOINCREMENT,titol_proj TEXT, clauproj_exp TEXT, procediment TEXT(8), data_aprovacio TEXT, num_finca TEXT, muni TEXT, pol TEXT, parce TEXT, qual_fiscal TEXT, pers_fis_jurid TEXT, titular_1 TEXT, titular_2 TEXT, titular_3 TEXT, adresa_1 TEXT, adresa_2 TEXT, adresa_3 TEXT, tel_1 TEXT, tel_2 TEXT, tel_3 TEXT, email_1 TEXT, email_2 TEXT, email_3 TEXT, data_APO TEXT, registral_origen TEXT, tom TEXT, llibre TEXT, full TEXT, inscripcio TEXT, data_inscripcio TEXT, sup_registral TEXT, registre_prop TEXT, sup_exp MEDIUMINT, sup_res MEDIUMINT, sup_pot MEDIUMINT, sup_les MEDIUMINT, sup_lea MEDIUMINT, sup_tcs MEDIUMINT, sup_tca MEDIUMINT, sup_acc MEDIUMINT, sup_plu MEDIUMINT, sup_reg MEDIUMINT, sup_sal MEDIUMINT, sup_serv MEDIUMINT, sup_ot MEDIUMINT, lloc_APO TEXT, lloc_AO TEXT, data_AO TEXT, titulars_compareixen_AO TEXT, titulars_signen_AO TEXT, representant_ajunt_AO TEXT, secretari_ajunt_AO TEXT, representant_admin_AO TEXT, perit_AO TEXT, import_DPO REAL, import_PRO REAL, num_xec_AO TEXT, percebut_AO TEXT, observacions_AO TEXT
                    );
                    """,
                    """
                    CREATE TRIGGER "trigger_insert_feature_count_taula_tramit_AO" AFTER INSERT ON "taula_tramit_AO" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('taula_tramit_AO'); END;
                    """,
                    """
                    CREATE TRIGGER "trigger_delete_feature_count_taula_tramit_AO" AFTER DELETE ON "taula_tramit_AO" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('taula_tramit_AO'); END;
                    """,
                    """
                    INSERT INTO taula_tramit_AO (
                    titol_proj, clauproj_exp, procediment, data_aprovacio, num_finca, muni, pol, parce, qual_fiscal, pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, data_APO, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, sup_registral, registre_prop, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_serv, sup_ot, lloc_APO, lloc_AO, data_AO, titulars_compareixen_AO, titulars_signen_AO, representant_ajunt_AO, secretari_ajunt_AO, representant_admin_AO, perit_AO, import_DPO, import_PRO, num_xec_AO, percebut_AO, observacions_AO
                    )
                    SELECT ao1.titol_proj, ao1.clauproj_exp, ao1.procediment, ao1.data_aprovacio, ao1.num_finca, ao1.muni, ao1.pol, ao1.parce, ao1.qual_fiscal, ao1.pers_fis_jurid, ao1.titular_1, ao1.titular_2, ao1.titular_3, ao1.adresa_1, ao1.adresa_2, ao1.adresa_3, ao1.tel_1, ao1.tel_2, ao1.tel_3, ao1.email_1, ao1.email_2, ao1.email_3, ao1.data_APO, ao1.registral_origen, ao1.tom, ao1.llibre, ao1.full, ao1.inscripcio, ao1.data_inscripcio, ao1.sup_registral, ao1.registre_prop, ao1.sup_exp, ao1.sup_res, ao1.sup_pot, ao1.sup_les, ao1.sup_lea, ao1.sup_tcs, ao1.sup_tca, ao1.sup_acc, ao1.sup_plu, ao1.sup_reg, ao1.sup_sal, ao1.sup_serv, ao1.sup_ot, ao1.lloc_APO, ao1.lloc_AO, ao1.data_AO, ao1.titulars_compareixen_AO, ao1.titulars_signen_AO, ao1.representant_ajunt_AO, ao1.secretari_ajunt_AO, ao1.representant_admin_AO, ao1.perit_AO, ao1.import_DPO, ao1.import_PRO, ao1.num_xec_AO, ao1.percebut_AO, ao1.observacions_AO
                    FROM taula_tramit_AO_1 as ao1 where editat IN ('si', 'Si', 'SI', 'sí', 'Sí', 'SÍ')
                    UNION
                    SELECT ao2.titol_proj, ao2.clauproj_exp, ao2.procediment, ao2.data_aprovacio, ao2.num_finca, ao2.muni, ao2.pol, ao2.parce, ao2.qual_fiscal, ao2.pers_fis_jurid, ao2.titular_1, ao2.titular_2, ao2.titular_3, ao2.adresa_1, ao2.adresa_2, ao2.adresa_3, ao2.tel_1, ao2.tel_2, ao2.tel_3, ao2.email_1, ao2.email_2, ao2.email_3, ao2.data_APO, ao2.registral_origen, ao2.tom, ao2.llibre, ao2.full, ao2.inscripcio, ao2.data_inscripcio, ao2.sup_registral, ao2.registre_prop, ao2.sup_exp, ao2.sup_res, ao2.sup_pot, ao2.sup_les, ao2.sup_lea, ao2.sup_tcs, ao2.sup_tca, ao2.sup_acc, ao2.sup_plu, ao2.sup_reg, ao2.sup_sal, ao2.sup_serv, ao2.sup_ot, ao2.lloc_APO, ao2.lloc_AO, ao2.data_AO, ao2.titulars_compareixen_AO, ao2.titulars_signen_AO, ao2.representant_ajunt_AO, ao2.secretari_ajunt_AO, ao2.representant_admin_AO, ao2.perit_AO, ao2.import_DPO, ao2.import_PRO, ao2.num_xec_AO, ao2.percebut_AO, ao2.observacions_AO
                    FROM taula_tramit_AO_2 as ao2 where editat IN ('si', 'Si', 'SI', 'sí', 'Sí', 'SÍ')
                    ORDER BY num_finca;
                    """
                    ]

                    try:
                        for query in sql_queries:
                            conn.executeSql(query)
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error SQL", f"Error a l'executar l'ordre SQL: {e}")

                    file_name = gpkg_path + '|layername=taula_tramit_AO'
                    layer_name = 'taula_tramit_AO'
                    taula_tramit_AO = QgsVectorLayer(file_name, layer_name, 'ogr')

                    # Crear una configuració de formulari d'edició
                    form_config = QgsEditFormConfig()
                    form_config.setUiForm(self.plugin_dir + '\\formularis/Taula_AO.ui')

                    # Assignar la configuració de formulari a la capa
                    taula_tramit_AO.setEditFormConfig(form_config)

                    QgsProject.instance().addMapLayer(taula_tramit_AO)

                def generar_taula_tramit_MA():
                    sql_queries = [
                        "DELETE FROM gpkg_contents WHERE table_name = 'taula_tramit_MA';",
                        """
                        INSERT INTO gpkg_contents (table_name, data_type, identifier, description, last_change)
                        VALUES ('taula_tramit_MA', 'attributes', 'taula_tramit_MA', 'taula tramitació actes de mutu acord', strftime('%Y-%m-%dT%H:%M:%fZ', 'now'));
                        """,
                        """
                        CREATE TABLE taula_tramit_MA(
                        fid INTEGER PRIMARY KEY AUTOINCREMENT,titol_proj TEXT, clauproj_exp TEXT, procediment TEXT(8), data_aprovacio TEXT, num_finca TEXT, muni TEXT, pol TEXT, parce TEXT, sup_cad_parce MEDIUMINT, pers_fis_jurid TEXT, titular_1 TEXT, titular_2 TEXT, titular_3 TEXT, adresa_1 TEXT, adresa_2 TEXT, adresa_3 TEXT, tel_1 TEXT, tel_2 TEXT, tel_3 TEXT, email_1 TEXT, email_2 TEXT, email_3 TEXT, sup_exp MEDIUMINT, sup_res MEDIUMINT, sup_pot MEDIUMINT, sup_les MEDIUMINT, sup_lea MEDIUMINT, sup_tcs MEDIUMINT, sup_tca MEDIUMINT, sup_acc MEDIUMINT, sup_plu MEDIUMINT, sup_reg MEDIUMINT, sup_sal MEDIUMINT, sup_serv MEDIUMINT, sup_ot MEDIUMINT, import_DPO REAL, import_PRO REAL, descripcio_MA TEXT, lloc_MA TEXT, data_MA TEXT, titulars_compareixen_MA TEXT, representant_admin_MA TEXT, perit_MA TEXT, titulars_signen_MA TEXT, import_JustPreu REAL, import_JustPreu_lletres TEXT, import_exp REAL, import_serv REAL, import_ot REAL, import_const_inst REAL, import_vol REAL, import_perj REAL, import_xec_APOD REAL, observacions_MA TEXT, registral_origen TEXT, tom TEXT, llibre TEXT, full TEXT, inscripcio TEXT, data_inscripcio TEXT, registre_prop TEXT, editat TEXT(2)
                        );
                        """,
                        """
                        CREATE TRIGGER "trigger_insert_feature_count_taula_tramit_MA" AFTER INSERT ON "taula_tramit_MA" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('taula_tramit_MA'); END;
                        """,
                        """
                        CREATE TRIGGER "trigger_delete_feature_count_taula_tramit_MA" AFTER DELETE ON "taula_tramit_MA" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('taula_tramit_MA'); END;
                        """,
                        """
                        INSERT INTO taula_tramit_MA (titol_proj,clauproj_exp,procediment,data_aprovacio,num_finca,muni,pol,parce,sup_cad_parce,pers_fis_jurid,titular_1,titular_2,titular_3,adresa_1,adresa_2,adresa_3,tel_1,tel_2,tel_3,email_1,email_2,email_3,sup_exp,sup_res,sup_pot,sup_les,sup_lea,sup_tcs,sup_tca,sup_acc,sup_plu,sup_reg,sup_sal,sup_serv,sup_ot,import_DPO,import_PRO,descripcio_MA,lloc_MA,data_MA,titulars_compareixen_MA,representant_admin_MA,perit_MA,titulars_signen_MA,import_JustPreu,import_JustPreu_lletres,import_exp,import_serv,import_ot,import_const_inst,import_vol, import_perj, import_xec_APOD,observacions_MA,registral_origen,tom,llibre,full,inscripcio,data_inscripcio,registre_prop)
                        SELECT dg.titol_proj, dg.clauproj_exp, dg.procediment, dg.data_aprovacio, dt.num_finca, dt.muni, dt.pol, dt.parce, dt.sup_cad_parce, dt.pers_fis_jurid, dt.titular_1, dt.titular_2, dt.titular_3, dt.adresa_1, dt.adresa_2, dt.adresa_3, dt.tel_1, dt.tel_2, dt.tel_3, dt.email_1, dt.email_2, dt.email_3, dt.sup_exp, dt.sup_res, dt.sup_pot, dt.sup_les, dt.sup_lea, dt.sup_tcs, dt.sup_tca, dt.sup_acc, dt.sup_plu, dt.sup_reg, dt.sup_sal, dt.sup_serv, dt.sup_ot, dt.import_DPO, dt.import_PRO, dt.descripcio_MA, dt.lloc_MA, dt.data_MA, dt.titulars_compareixen_MA, dt.representant_admin_MA, dt.perit_MA, dt.titulars_signen_MA, dt.import_JustPreu, dt.import_JustPreu_lletres, dt.import_exp, dt.import_serv, dt.import_ot, dt.import_const_inst, dt.import_vol, dt.import_perj, dt.import_xec_APOD, dt.observacions_MA, dt.registral_origen, dt.tom, dt.llibre, dt.full, dt.inscripcio, dt.data_inscripcio, dt.registre_prop
                        FROM dades_generals as dg
                        INNER JOIN dades_tramit as dt ON dg.clauproj_exp = dt.clauproj_exp
                        order by dt.num_finca;
                        """
                    ]

                    try:
                        for query in sql_queries:
                            conn.executeSql(query)
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error SQL", f"Error a l'executar l'ordre SQL: {e}")

                    file_name = gpkg_path + '|layername=taula_tramit_MA'
                    layer_name = 'taula_tramit_MA'
                    taula_tramit_MA = QgsVectorLayer(file_name, layer_name, 'ogr')

                    # Crear una configuració de formulari d'edició
                    form_config = QgsEditFormConfig()
                    form_config.setUiForm(self.plugin_dir + '\\formularis/Taula_MA_urg.ui')

                    # Assignar la configuració de formulari a la capa
                    taula_tramit_MA.setEditFormConfig(form_config)

                    QgsProject.instance().addMapLayer(taula_tramit_MA)

                def act_dades_tramit_desde_MA():
                    sql_query = """
                    UPDATE dades_tramit
                    SET (
                    num_finca,muni,pol,parce,sup_cad_parce,pers_fis_jurid,titular_1,titular_2,titular_3,adresa_1,adresa_2,adresa_3,tel_1,tel_2,tel_3,email_1,email_2,email_3, sup_exp,sup_res,sup_pot,sup_les,sup_lea,sup_tcs,sup_tca,sup_acc,sup_plu,sup_reg,sup_sal,sup_serv,sup_ot,import_DPO,import_PRO,descripcio_MA,lloc_MA,data_MA, titulars_compareixen_MA,representant_admin_MA,perit_MA,titulars_signen_MA,import_JustPreu,import_JustPreu_lletres,import_exp,import_serv,import_ot,import_const_inst, import_vol, import_perj, import_xec_APOD,observacions_MA,registral_origen,tom,llibre,full,inscripcio,data_inscripcio,registre_prop
                    ) =
                    (
                    SELECT
                    num_finca,muni,pol,parce,sup_cad_parce,pers_fis_jurid,titular_1,titular_2,titular_3,adresa_1,adresa_2,adresa_3,tel_1,tel_2,tel_3,email_1,email_2,email_3, sup_exp,sup_res,sup_pot,sup_les,sup_lea,sup_tcs,sup_tca,sup_acc,sup_plu,sup_reg,sup_sal,sup_serv,sup_ot,import_DPO,import_PRO,descripcio_MA,lloc_MA,data_MA, titulars_compareixen_MA,representant_admin_MA,perit_MA,titulars_signen_MA,import_JustPreu,import_JustPreu_lletres,import_exp,import_serv,import_ot,import_const_inst, import_vol, import_perj, import_xec_APOD,observacions_MA,registral_origen,tom,llibre,full,inscripcio,data_inscripcio,registre_prop
                    FROM taula_tramit_MA
                    WHERE taula_tramit_MA.num_finca = dades_tramit.num_finca
                    )
                    WHERE EXISTS (
                    SELECT* FROM taula_tramit_MA WHERE taula_tramit_MA.num_finca = dades_tramit.num_finca
                    )
                    """
                    try:
                        conn.executeSql(sql_query)
                        QMessageBox.information(iface.mainWindow(), "Success", "La taula dades_tramit s'ha actualitzat.")
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error", f"Error a l'executar l'ordre SQL: {e}")

                def combinar_MA_1_MA_2():
                    sql_queries = [
                    "DELETE FROM gpkg_contents WHERE table_name = 'taula_tramit_MA';",
                    """
                    INSERT INTO gpkg_contents (table_name, data_type, identifier, description, last_change)
                    VALUES ('taula_tramit_MA', 'attributes', 'taula_tramit_MA', 'taula tramitació actes de mutu acord', strftime('%Y-%m-%dT%H:%M:%fZ', 'now'));
                    """,
                    """
                    CREATE TABLE taula_tramit_MA(
                    fid INTEGER PRIMARY KEY AUTOINCREMENT,titol_proj TEXT, clauproj_exp TEXT, procediment TEXT(8), data_aprovacio TEXT, num_finca TEXT, muni TEXT, pol TEXT, parce TEXT, sup_cad_parce MEDIUMINT, pers_fis_jurid TEXT, titular_1 TEXT, titular_2 TEXT, titular_3 TEXT, adresa_1 TEXT, adresa_2 TEXT, adresa_3 TEXT, tel_1 TEXT, tel_2 TEXT, tel_3 TEXT, email_1 TEXT, email_2 TEXT, email_3 TEXT, sup_exp MEDIUMINT, sup_res MEDIUMINT, sup_pot MEDIUMINT, sup_les MEDIUMINT, sup_lea MEDIUMINT, sup_tcs MEDIUMINT, sup_tca MEDIUMINT, sup_acc MEDIUMINT, sup_plu MEDIUMINT, sup_reg MEDIUMINT, sup_sal MEDIUMINT, sup_serv MEDIUMINT, sup_ot MEDIUMINT, import_DPO REAL, import_PRO REAL, descripcio_MA TEXT, lloc_MA TEXT, data_MA TEXT, titulars_compareixen_MA TEXT, representant_admin_MA TEXT, perit_MA TEXT, titulars_signen_MA TEXT, import_JustPreu REAL, import_JustPreu_lletres TEXT, import_exp REAL, import_serv REAL, import_ot REAL, import_const_inst REAL, import_vol REAL, import_perj REAL, import_xec_APOD REAL, observacions_MA TEXT, registral_origen TEXT, tom TEXT, llibre TEXT, full TEXT, inscripcio TEXT, data_inscripcio TEXT, registre_prop TEXT
                    );
                    """,
                    """
                    CREATE TRIGGER "trigger_insert_feature_count_taula_tramit_MA" AFTER INSERT ON "taula_tramit_MA" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('taula_tramit_MA'); END;
                    """,
                    """
                    CREATE TRIGGER "trigger_delete_feature_count_taula_tramit_MA" AFTER DELETE ON "taula_tramit_MA" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('taula_tramit_MA'); END;
                    """,
                    """
                    INSERT INTO taula_tramit_MA (
                    titol_proj,clauproj_exp,procediment,data_aprovacio,num_finca,muni,pol,parce,sup_cad_parce,pers_fis_jurid,titular_1,titular_2,titular_3,adresa_1,adresa_2,adresa_3,tel_1,tel_2,tel_3,email_1,email_2,email_3,sup_exp,sup_res,sup_pot,sup_les,sup_lea,sup_tcs,sup_tca,sup_acc,sup_plu,sup_reg,sup_sal,sup_serv,sup_ot,import_DPO,import_PRO,descripcio_MA,lloc_MA,data_MA,titulars_compareixen_MA,representant_admin_MA,perit_MA,titulars_signen_MA,import_JustPreu,import_JustPreu_lletres,import_exp,import_serv,import_ot,import_const_inst,import_vol, import_perj, import_xec_APOD,observacions_MA,registral_origen,tom,llibre,full,inscripcio,data_inscripcio,registre_prop
                    )
                    SELECT ma1.titol_proj, ma1.clauproj_exp, ma1.procediment, ma1.data_aprovacio, ma1.num_finca, ma1.muni, ma1.pol, ma1.parce, ma1.sup_cad_parce, ma1.pers_fis_jurid, ma1.titular_1, ma1.titular_2, ma1.titular_3, ma1.adresa_1, ma1.adresa_2, ma1.adresa_3, ma1.tel_1, ma1.tel_2, ma1.tel_3, ma1.email_1, ma1.email_2, ma1.email_3, ma1.sup_exp, ma1.sup_res, ma1.sup_pot, ma1.sup_les, ma1.sup_lea, ma1.sup_tcs, ma1.sup_tca, ma1.sup_acc, ma1.sup_plu, ma1.sup_reg, ma1.sup_sal, ma1.sup_serv, ma1.sup_ot, ma1.import_DPO, ma1.import_PRO, ma1.descripcio_MA, ma1.lloc_MA, ma1.data_MA, ma1.titulars_compareixen_MA, ma1.representant_admin_MA, ma1.perit_MA, ma1.titulars_signen_MA, ma1.import_JustPreu, ma1.import_JustPreu_lletres, ma1.import_exp, ma1.import_serv, ma1.import_ot, ma1.import_const_inst, ma1.import_vol, ma1.import_perj, ma1.import_xec_APOD, ma1.observacions_MA, ma1.registral_origen, ma1.tom, ma1.llibre, ma1.full, ma1.inscripcio, ma1.data_inscripcio, ma1.registre_prop
                    FROM taula_tramit_MA_1 as ma1 where editat IN ('si', 'Si', 'SI', 'sí', 'Sí', 'SÍ')
                    UNION
                    SELECT ma2.titol_proj, ma2.clauproj_exp, ma2.procediment, ma2.data_aprovacio, ma2.num_finca, ma2.muni, ma2.pol, ma2.parce, ma2.sup_cad_parce, ma2.pers_fis_jurid, ma2.titular_1, ma2.titular_2, ma2.titular_3, ma2.adresa_1, ma2.adresa_2, ma2.adresa_3, ma2.tel_1, ma2.tel_2, ma2.tel_3, ma2.email_1, ma2.email_2, ma2.email_3, ma2.sup_exp, ma2.sup_res, ma2.sup_pot, ma2.sup_les, ma2.sup_lea, ma2.sup_tcs, ma2.sup_tca, ma2.sup_acc, ma2.sup_plu, ma2.sup_reg, ma2.sup_sal, ma2.sup_serv, ma2.sup_ot, ma2.import_DPO, ma2.import_PRO, ma2.descripcio_MA, ma2.lloc_MA, ma2.data_MA, ma2.titulars_compareixen_MA, ma2.representant_admin_MA, ma2.perit_MA, ma2.titulars_signen_MA, ma2.import_JustPreu, ma2.import_JustPreu_lletres, ma2.import_exp, ma2.import_serv, ma2.import_ot, ma2.import_const_inst, ma2.import_vol, ma2.import_perj, ma2.import_xec_APOD, ma2.observacions_MA, ma2.registral_origen, ma2.tom, ma2.llibre, ma2.full, ma2.inscripcio, ma2.data_inscripcio, ma2.registre_prop
                    FROM taula_tramit_MA_2 as ma2 where editat IN ('si', 'Si', 'SI', 'sí', 'Sí', 'SÍ')
                    ORDER BY num_finca;
                    """
                    ]

                    try:
                        for query in sql_queries:
                            conn.executeSql(query)
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error SQL", f"Error a l'executar l'ordre SQL: {e}")

                    file_name = gpkg_path + '|layername=taula_tramit_MA'
                    layer_name = 'taula_tramit_MA'
                    taula_tramit_MA = QgsVectorLayer(file_name, layer_name, 'ogr')

                    # Crear una configuració de formulari d'edició
                    form_config = QgsEditFormConfig()
                    form_config.setUiForm(self.plugin_dir + '\\formularis/Taula_MA_urg.ui')

                    # Assignar la configuració de formulari a la capa
                    taula_tramit_MA.setEditFormConfig(form_config)

                    QgsProject.instance().addMapLayer(taula_tramit_MA)

                def generar_taula_tramit_APOD():
                    sql_queries = [
                        "DELETE FROM gpkg_contents WHERE table_name = 'taula_tramit_APOD';",
                        """
                        INSERT INTO gpkg_contents (table_name, data_type, identifier, description, last_change)
                        VALUES ('taula_tramit_APOD', 'attributes', 'taula_tramit_APOD', 'taula tramitació actes de pagament', strftime('%Y-%m-%dT%H:%M:%fZ', 'now'));
                        """,
                        """
                        CREATE TABLE taula_tramit_APOD(
                        fid INTEGER PRIMARY KEY AUTOINCREMENT,titol_proj TEXT, clauproj_exp TEXT, procediment TEXT(8), data_aprovacio TEXT, num_finca TEXT,	muni TEXT, pol TEXT, parce TEXT, qual_fiscal TEXT, pers_fis_jurid TEXT, titular_1 TEXT, titular_2 TEXT, titular_3 TEXT, adresa_1 TEXT, adresa_2 TEXT, adresa_3 TEXT, tel_1 TEXT, tel_2 TEXT, tel_3 TEXT, email_1 TEXT, email_2 TEXT, email_3 TEXT, registral_origen TEXT, tom TEXT, llibre TEXT, full TEXT, inscripcio TEXT, data_inscripcio TEXT, sup_registral TEXT, registre_prop TEXT, sup_exp MEDIUMINT, sup_res MEDIUMINT, sup_pot MEDIUMINT, sup_les MEDIUMINT, sup_lea MEDIUMINT, sup_tcs MEDIUMINT, sup_tca MEDIUMINT, sup_acc MEDIUMINT, sup_plu MEDIUMINT, sup_reg MEDIUMINT, sup_sal MEDIUMINT, sup_serv MEDIUMINT, sup_ot MEDIUMINT, import_DPO REAL, import_PRO REAL, import_JustPreu REAL, import_JustPreu_lletres TEXT, import_exp REAL, import_serv REAL, import_ot REAL, import_const_inst REAL, import_vol REAL, import_perj REAL, import_xec_APOD REAL, num_xec_APOD TEXT, lloc_APOD TEXT, data_APO TEXT, data_APOD TEXT, titulars_compareixen_APOD TEXT, representant_admin_APOD TEXT, perit_APOD TEXT, titulars_signen_APOD TEXT, descripcio_registral TEXT, titol_registral TEXT, afeccio_registral TEXT, observacions_APOD TEXT, percebut_APOD TEXT, editat TEXT(2)
                        );
                        """,
                        """
                        CREATE TRIGGER "trigger_insert_feature_count_taula_tramit_APOD" AFTER INSERT ON "taula_tramit_APOD" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('taula_tramit_APOD'); END;
                        """,
                        """
                        CREATE TRIGGER "trigger_delete_feature_count_taula_tramit_APOD" AFTER DELETE ON "taula_tramit_APOD" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('taula_tramit_APOD'); END;
                        """,
                        """
                        INSERT INTO taula_tramit_APOD (
                        titol_proj,clauproj_exp,procediment,data_aprovacio, num_finca, muni, pol, parce, qual_fiscal, pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, sup_registral, registre_prop, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_serv, sup_ot, import_DPO, import_PRO, import_JustPreu, import_JustPreu_lletres, import_exp, import_serv, import_ot, import_const_inst, import_vol, import_perj, import_xec_APOD, num_xec_APOD, lloc_APOD, data_APO, data_APOD, titulars_compareixen_APOD, representant_admin_APOD, perit_APOD, titulars_signen_APOD, descripcio_registral, titol_registral, afeccio_registral, observacions_APOD, percebut_APOD
                        )
                        SELECT dg.titol_proj, dg.clauproj_exp, dg.procediment, dg.data_aprovacio, dt.num_finca, dt.muni, dt.pol, dt.parce, dt.qual_fiscal, dt.pers_fis_jurid, dt.titular_1, dt.titular_2, dt.titular_3, dt.adresa_1, dt.adresa_2, dt.adresa_3, dt.tel_1, dt.tel_2, dt.tel_3, dt.email_1, dt.email_2, dt.email_3, dt.registral_origen, dt.tom, dt.llibre, dt.full, dt.inscripcio, dt.data_inscripcio, dt.sup_registral, dt.registre_prop, dt.sup_exp, dt.sup_res, dt.sup_pot, dt.sup_les, dt.sup_lea, dt.sup_tcs, dt.sup_tca, dt.sup_acc, dt.sup_plu, dt.sup_reg, dt.sup_sal, dt.sup_serv, dt.sup_ot, dt.import_DPO, dt.import_PRO, dt.import_JustPreu, dt.import_JustPreu_lletres, dt.import_exp, dt.import_serv, dt.import_ot, dt.import_const_inst, dt.import_vol, dt.import_perj, dt.import_xec_APOD, dt.num_xec_APOD, dt.lloc_APOD, dt.data_APO, dt.data_APOD, dt.titulars_compareixen_APOD, dt.representant_admin_APOD, dt.perit_APOD, dt.titulars_signen_APOD, dt.descripcio_registral, dt.titol_registral, dt.afeccio_registral, dt.observacions_APOD, dt.percebut_APOD
                        FROM dades_generals as dg
                        INNER JOIN dades_tramit as dt ON dg.clauproj_exp = dt.clauproj_exp
                        order by dt.num_finca;
                        """
                    ]

                    try:
                        for query in sql_queries:
                            conn.executeSql(query)
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error SQL", f"Error a l'executar l'ordre SQL: {e}")

                    file_name = gpkg_path + '|layername=taula_tramit_APOD'
                    layer_name = 'taula_tramit_APOD'
                    taula_tramit_APOD = QgsVectorLayer(file_name, layer_name, 'ogr')

                    # Crear una configuració de formulari d'edició
                    form_config = QgsEditFormConfig()
                    form_config.setUiForm(self.plugin_dir + '\\formularis/Taula_APOD_urg.ui')

                    # Assignar la configuració de formulari a la capa
                    taula_tramit_APOD.setEditFormConfig(form_config)

                    QgsProject.instance().addMapLayer(taula_tramit_APOD)

                def act_dades_tramit_desde_APOD():
        
                    sql_query = """
                    UPDATE dades_tramit
                    SET (
                    num_finca, muni, pol, parce, qual_fiscal, pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, sup_registral, registre_prop, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_serv, sup_ot, import_DPO, import_PRO, import_JustPreu, import_JustPreu_lletres, import_exp, import_serv, import_ot, import_const_inst, import_vol, import_perj, import_xec_APOD, num_xec_APOD, lloc_APOD, data_APO, data_APOD, titulars_compareixen_APOD, representant_admin_APOD, perit_APOD, titulars_signen_APOD, descripcio_registral, titol_registral, afeccio_registral, observacions_APOD, percebut_APOD
                    ) =
                    (
                    SELECT
                    num_finca, muni, pol, parce, qual_fiscal, pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, sup_registral, registre_prop, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_serv, sup_ot, import_DPO, import_PRO, import_JustPreu, import_JustPreu_lletres, import_exp, import_serv, import_ot, import_const_inst, import_vol, import_perj, import_xec_APOD, num_xec_APOD, lloc_APOD, data_APO, data_APOD, titulars_compareixen_APOD, representant_admin_APOD, perit_APOD, titulars_signen_APOD, descripcio_registral, titol_registral, afeccio_registral, observacions_APOD, percebut_APOD
                    FROM taula_tramit_APOD
                    WHERE taula_tramit_APOD.num_finca = dades_tramit.num_finca
                    )
                    WHERE EXISTS (
                    SELECT* FROM taula_tramit_APOD WHERE taula_tramit_APOD.num_finca = dades_tramit.num_finca
                    )
                    """
                    try:
                        conn.executeSql(sql_query)
                        QMessageBox.information(iface.mainWindow(), "Success", "La taula dades_tramit s'ha actualitzat.")
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error", f"Error a l'executar l'ordre SQL: {e}")

                def combinar_APOD_1_APOD_2():
                    sql_queries = [
                    "DELETE FROM gpkg_contents WHERE table_name = 'taula_tramit_APOD';",
                    """
                    INSERT INTO gpkg_contents (table_name, data_type, identifier, description, last_change)
                    VALUES ('taula_tramit_APOD', 'attributes', 'taula_tramit_APOD', 'taula tramitació actes de pagament', strftime('%Y-%m-%dT%H:%M:%fZ', 'now'));
                    """,
                    """
                    CREATE TABLE taula_tramit_APOD(
                    fid INTEGER PRIMARY KEY AUTOINCREMENT, titol_proj TEXT, clauproj_exp TEXT, procediment TEXT(8), data_aprovacio TEXT, num_finca TEXT, muni TEXT, pol TEXT, parce TEXT, sup_cad_parce MEDIUMINT, pers_fis_jurid TEXT, titular_1 TEXT, titular_2 TEXT, titular_3 TEXT, adresa_1 TEXT, adresa_2 TEXT, adresa_3 TEXT, tel_1 TEXT, tel_2 TEXT, tel_3 TEXT, eapodil_1 TEXT, eapodil_2 TEXT, eapodil_3 TEXT, sup_exp MEDIUMINT, sup_res MEDIUMINT, sup_pot MEDIUMINT, sup_les MEDIUMINT, sup_lea MEDIUMINT, sup_tcs MEDIUMINT, sup_tca MEDIUMINT, sup_acc MEDIUMINT, sup_plu MEDIUMINT, sup_reg MEDIUMINT, sup_sal MEDIUMINT, sup_serv MEDIUMINT, sup_ot MEDIUMINT, import_DPO REAL, import_PRO REAL, descripcio_APOD TEXT, lloc_APOD TEXT, data_APOD TEXT, titulars_compareixen_APOD TEXT, representant_admin_APOD TEXT, perit_APOD TEXT, titulars_signen_APOD TEXT, import_JustPreu REAL, import_JustPreu_lletres TEXT, import_exp REAL, import_serv REAL, import_ot REAL, import_const_inst REAL, import_vol REAL, import_perj REAL, import_xec_APOD REAL, observacions_APOD TEXT, registral_origen TEXT, tom TEXT, llibre TEXT, full TEXT, inscripcio TEXT, data_inscripcio TEXT, registre_prop TEXT
                    );
                    """,
                    """
                    CREATE TRIGGER "trigger_insert_feature_count_taula_tramit_APOD" AFTER INSERT ON "taula_tramit_APOD" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('taula_tramit_APOD'); END;
                    """,
                    """
                    CREATE TRIGGER "trigger_delete_feature_count_taula_tramit_APOD" AFTER DELETE ON "taula_tramit_APOD" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('taula_tramit_APOD'); END;
                    """,
                    """
                    INSERT INTO taula_tramit_APOD (
                    titol_proj,clauproj_exp,procediment,data_aprovacio, num_finca, muni, pol, parce, qual_fiscal, pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, sup_registral, registre_prop, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_serv, sup_ot, import_DPO, import_PRO, import_JustPreu, import_JustPreu_lletres, import_exp, import_serv, import_ot, import_const_inst, import_vol, import_perj, import_xec_APOD, num_xec_APOD, lloc_APOD, data_APO, data_APOD, titulars_compareixen_APOD, representant_admin_APOD, perit_APOD, titulars_signen_APOD, descripcio_registral, titol_registral, afeccio_registral, observacions_APOD, percebut_APOD
                    )
                    SELECT apod1.titol_proj, apod1.clauproj_exp, apod1.procediment, apod1.data_aprovacio, apod1.num_finca, apod1.muni, apod1.pol, apod1.parce, apod1.qual_fiscal, apod1.pers_fis_jurid, apod1.titular_1, apod1.titular_2, apod1.titular_3, apod1.adresa_1, apod1.adresa_2, apod1.adresa_3, apod1.tel_1, apod1.tel_2, apod1.tel_3, apod1.email_1, apod1.email_2, apod1.email_3, apod1.registral_origen, apod1.tom, apod1.llibre, apod1.full, apod1.inscripcio, apod1.data_inscripcio, apod1.sup_registral, apod1.registre_prop, apod1.sup_exp, apod1.sup_res, apod1.sup_pot, apod1.sup_les, apod1.sup_lea, apod1.sup_tcs, apod1.sup_tca, apod1.sup_acc, apod1.sup_plu, apod1.sup_reg, apod1.sup_sal, apod1.sup_serv, apod1.sup_ot, apod1.import_DPO, apod1.import_PRO, apod1.import_JustPreu, apod1.import_JustPreu_lletres, apod1.import_exp, apod1.import_serv, apod1.import_ot, apod1.import_const_inst, apod1.import_vol, apod1.import_perj, apod1.import_xec_APOD, apod1.num_xec_APOD, apod1.lloc_APOD, apod1.data_APO, apod1.data_APOD, apod1.titulars_compareixen_APOD, apod1.representant_admin_APOD, apod1.perit_APOD, apod1.titulars_signen_APOD, apod1.descripcio_registral, apod1.titol_registral, apod1.afeccio_registral, apod1.observacions_APOD, apod1.percebut_APOD
                    FROM taula_tramit_APOD_1 as apod1 where editat IN ('si', 'Si', 'SI', 'sí', 'Sí', 'SÍ')
                    UNION
                    SELECT apod2.titol_proj, apod2.clauproj_exp, apod2.procediment, apod2.data_aprovacio, apod2.num_finca, apod2.muni, apod2.pol, apod2.parce, apod2.qual_fiscal, apod2.pers_fis_jurid, apod2.titular_1, apod2.titular_2, apod2.titular_3, apod2.adresa_1, apod2.adresa_2, apod2.adresa_3, apod2.tel_1, apod2.tel_2, apod2.tel_3, apod2.email_1, apod2.email_2, apod2.email_3, apod2.registral_origen, apod2.tom, apod2.llibre, apod2.full, apod2.inscripcio, apod2.data_inscripcio, apod2.sup_registral, apod2.registre_prop, apod2.sup_exp, apod2.sup_res, apod2.sup_pot, apod2.sup_les, apod2.sup_lea, apod2.sup_tcs, apod2.sup_tca, apod2.sup_acc, apod2.sup_plu, apod2.sup_reg, apod2.sup_sal, apod2.sup_serv, apod2.sup_ot, apod2.import_DPO, apod2.import_PRO, apod2.import_JustPreu, apod2.import_JustPreu_lletres, apod2.import_exp, apod2.import_serv, apod2.import_ot, apod2.import_const_inst, apod2.import_vol, apod2.import_perj, apod2.import_xec_APOD, apod2.num_xec_APOD, apod2.lloc_APOD, apod2.data_APO, apod2.data_APOD, apod2.titulars_compareixen_APOD, apod2.representant_admin_APOD, apod2.perit_APOD, apod2.titulars_signen_APOD, apod2.descripcio_registral, apod2.titol_registral, apod2.afeccio_registral, apod2.observacions_APOD, apod2.percebut_APOD
                    FROM taula_tramit_APOD_2 as apod2 where editat IN ('si', 'Si', 'SI', 'sí', 'Sí', 'SÍ')
                    ORDER BY num_finca;
                    """
                    ]

                    try:
                        for query in sql_queries:
                            conn.executeSql(query)
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error SQL", f"Error a l'executar l'ordre SQL: {e}")

                    file_name = gpkg_path + '|layername=taula_tramit_APOD'
                    layer_name = 'taula_tramit_APOD'
                    taula_tramit_APOD = QgsVectorLayer(file_name, layer_name, 'ogr')

                    # Crear una configuració de formulari d'edició
                    form_config = QgsEditFormConfig()
                    form_config.setUiForm(self.plugin_dir + '\\formularis/Taula_APOD_urg.ui')

                    # Assignar la configuració de formulari a la capa
                    taula_tramit_APOD.setEditFormConfig(form_config)

                    QgsProject.instance().addMapLayer(taula_tramit_APOD)

                def generar_taula_tramit_COMP():
                    sql_queries = [
                        "DELETE FROM gpkg_contents WHERE table_name = 'taula_tramit_COMP';",
                        """
                        INSERT INTO gpkg_contents (table_name, data_type, identifier, description, last_change)
                        VALUES ('taula_tramit_COMP', 'attributes', 'taula_tramit_COMP', 'taula tramitació actes de pagament', strftime('%Y-%m-%dT%H:%M:%fZ', 'now'));
                        """,
                        """
                        CREATE TABLE taula_tramit_COMP(
                        fid INTEGER PRIMARY KEY AUTOINCREMENT,titol_proj TEXT, clauproj_exp TEXT, procediment TEXT(8), data_aprovacio TEXT, temps_obra TEXT(25), demanial TEXT (2), num_finca TEXT, muni TEXT, pol TEXT, parce TEXT, qual_fiscal TEXT, pers_fis_jurid TEXT, titular_1 TEXT, titular_2 TEXT, titular_3 TEXT, adresa_1 TEXT, adresa_2 TEXT, adresa_3 TEXT, tel_1 TEXT, tel_2 TEXT, tel_3 TEXT, email_1 TEXT, email_2 TEXT, email_3 TEXT, sup_exp MEDIUMINT, sup_res MEDIUMINT, sup_pot MEDIUMINT, sup_les MEDIUMINT, sup_lea MEDIUMINT, sup_tcs MEDIUMINT, sup_tca MEDIUMINT, sup_acc MEDIUMINT, sup_plu MEDIUMINT, sup_reg MEDIUMINT, sup_sal MEDIUMINT, sup_serv MEDIUMINT, sup_ot MEDIUMINT, descripcio_COMP TEXT, lloc_COMP TEXT, data_COMP TEXT, titulars_compareixen_COMP TEXT, representant_admin_COMP TEXT, perit_COMP TEXT, titulars_signen_COMP TEXT, observacions_COMP TEXT, registral_origen TEXT, tom TEXT, llibre TEXT, full TEXT, inscripcio TEXT, data_inscripcio TEXT, registre_prop TEXT, editat TEXT(2)
						);
                        """,
                        """
                        CREATE TRIGGER "trigger_insert_feature_count_taula_tramit_COMP" AFTER INSERT ON "taula_tramit_COMP" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('taula_tramit_COMP'); END;
                        """,
                        """
                        CREATE TRIGGER "trigger_delete_feature_count_taula_tramit_COMP" AFTER DELETE ON "taula_tramit_COMP" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('taula_tramit_COMP'); END;
                        """,
                        """
                        INSERT INTO taula_tramit_COMP (
                        titol_proj,clauproj_exp,procediment,data_aprovacio, temps_obra, demanial, num_finca, muni, pol, parce, qual_fiscal, pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_serv, sup_ot, descripcio_COMP, lloc_COMP, data_COMP, titulars_compareixen_COMP, representant_admin_COMP, perit_COMP, titulars_signen_COMP, observacions_COMP, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, registre_prop
						)
                        SELECT dg.titol_proj, dg.clauproj_exp, dg.procediment, dg.data_aprovacio, dg.temps_obra, dt.demanial, dt.num_finca, dt.muni, dt.pol, dt.parce, dt.qual_fiscal, dt.pers_fis_jurid, dt.titular_1, dt.titular_2, dt.titular_3, dt.adresa_1, dt.adresa_2, dt.adresa_3, dt.tel_1, dt.tel_2, dt.tel_3, dt.email_1, dt.email_2, dt.email_3, dt.sup_exp, dt.sup_res, dt.sup_pot, dt.sup_les, dt.sup_lea, dt.sup_tcs, dt.sup_tca, dt.sup_acc, dt.sup_plu, dt.sup_reg, dt.sup_sal, dt.sup_serv, dt.sup_ot, dt.descripcio_COMP, dt.lloc_COMP, dt.data_COMP, dt.titulars_compareixen_COMP, dt.representant_admin_COMP, dt.perit_COMP, dt.titulars_signen_COMP, dt.observacions_COMP, dt.registral_origen, dt.tom, dt.llibre, dt.full, dt.inscripcio, dt.data_inscripcio, dt.registre_prop
						FROM dades_generals as dg
                        INNER JOIN dades_tramit as dt ON dg.clauproj_exp = dt.clauproj_exp
                        order by dt.num_finca;
                        """
                    ]

                    try:
                        for query in sql_queries:
                            conn.executeSql(query)
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error SQL", f"Error a l'executar l'ordre SQL: {e}")

                    file_name = gpkg_path + '|layername=taula_tramit_COMP'
                    layer_name = 'taula_tramit_COMP'
                    taula_tramit_COMP = QgsVectorLayer(file_name, layer_name, 'ogr')

                    # Crear una configuració de formulari d'edició
                    form_config = QgsEditFormConfig()
                    form_config.setUiForm(self.plugin_dir + '\\formularis/Taula_COMP.ui')

                    # Assignar la configuració de formulari a la capa
                    taula_tramit_COMP.setEditFormConfig(form_config)

                    QgsProject.instance().addMapLayer(taula_tramit_COMP)

                def act_dades_tramit_desde_COMP():
        
                    sql_query = """
                    UPDATE dades_tramit
                    SET (
                    demanial, num_finca, muni, pol, parce, qual_fiscal, pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_serv, sup_ot, descripcio_COMP, lloc_COMP, data_COMP, titulars_compareixen_COMP, representant_admin_COMP, perit_COMP, titulars_signen_COMP, observacions_COMP, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, registre_prop
					) =
                    (
                    SELECT
                    demanial, num_finca, muni, pol, parce, qual_fiscal, pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_serv, sup_ot, descripcio_COMP, lloc_COMP, data_COMP, titulars_compareixen_COMP, representant_admin_COMP, perit_COMP, titulars_signen_COMP, observacions_COMP, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, registre_prop
					FROM taula_tramit_COMP
                    WHERE taula_tramit_COMP.num_finca = dades_tramit.num_finca
                    )
                    WHERE EXISTS (
                    SELECT* FROM taula_tramit_COMP WHERE taula_tramit_COMP.num_finca = dades_tramit.num_finca
                    )
                    """
                    try:
                        conn.executeSql(sql_query)
                        QMessageBox.information(iface.mainWindow(), "Success", "La taula dades_tramit s'ha actualitzat.")
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error", f"Error a l'executar l'ordre SQL: {e}")

                def combinar_COMP_1_COMP_2():
                    sql_queries = [
                    "DELETE FROM gpkg_contents WHERE table_name = 'taula_tramit_COMP';",
                    """
                    INSERT INTO gpkg_contents (table_name, data_type, identifier, description, last_change)
                    VALUES ('taula_tramit_COMP', 'attributes', 'taula_tramit_COMP', 'taula tramitació actes de pagament', strftime('%Y-%m-%dT%H:%M:%fZ', 'now'));
                    """,
                    """
                    CREATE TABLE taula_tramit_COMP(
                    fid INTEGER PRIMARY KEY AUTOINCREMENT, titol_proj TEXT, clauproj_exp TEXT, procediment TEXT(8), data_aprovacio TEXT, temps_obra TEXT(25), demanial TEXT (2), num_finca TEXT, muni TEXT, pol TEXT, parce TEXT, qual_fiscal TEXT, pers_fis_jurid TEXT, titular_1 TEXT, titular_2 TEXT, titular_3 TEXT, adresa_1 TEXT, adresa_2 TEXT, adresa_3 TEXT, tel_1 TEXT, tel_2 TEXT, tel_3 TEXT, email_1 TEXT, email_2 TEXT, email_3 TEXT, sup_exp MEDIUMINT, sup_res MEDIUMINT, sup_pot MEDIUMINT, sup_les MEDIUMINT, sup_lea MEDIUMINT, sup_tcs MEDIUMINT, sup_tca MEDIUMINT, sup_acc MEDIUMINT, sup_plu MEDIUMINT, sup_reg MEDIUMINT, sup_sal MEDIUMINT, sup_serv MEDIUMINT, sup_ot MEDIUMINT, descripcio_COMP TEXT, lloc_COMP TEXT, data_COMP TEXT, titulars_compareixen_COMP TEXT, representant_admin_COMP TEXT, perit_COMP TEXT, titulars_signen_COMP TEXT, observacions_COMP TEXT, registral_origen TEXT, tom TEXT, llibre TEXT, full TEXT, inscripcio TEXT, data_inscripcio TEXT, registre_prop TEXT
					);
                    """,
                    """
                    CREATE TRIGGER "trigger_insert_feature_count_taula_tramit_COMP" AFTER INSERT ON "taula_tramit_COMP" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('taula_tramit_COMP'); END;
                    """,
                    """
                    CREATE TRIGGER "trigger_delete_feature_count_taula_tramit_COMP" AFTER DELETE ON "taula_tramit_COMP" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('taula_tramit_COMP'); END;
                    """,
                    """
                    INSERT INTO taula_tramit_COMP (
                    titol_proj,clauproj_exp,procediment,data_aprovacio, demanial, num_finca, muni, pol, parce, qual_fiscal, pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_serv, sup_ot, descripcio_COMP, lloc_COMP, data_COMP, titulars_compareixen_COMP, representant_admin_COMP, perit_COMP, titulars_signen_COMP, observacions_COMP, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, registre_prop
					)
                    SELECT comp1.titol_proj, comp1.clauproj_exp, comp1.procediment, comp1.data_aprovacio, comp1.temps_obra, comp1.demanial, comp1.num_finca, comp1.muni, comp1.pol, comp1.parce, comp1.qual_fiscal, comp1.pers_fis_jurid, comp1.titular_1, comp1.titular_2, comp1.titular_3, comp1.adresa_1, comp1.adresa_2, comp1.adresa_3, comp1.tel_1, comp1.tel_2, comp1.tel_3, comp1.email_1, comp1.email_2, comp1.email_3, comp1.sup_exp, comp1.sup_res, comp1.sup_pot, comp1.sup_les, comp1.sup_lea, comp1.sup_tcs, comp1.sup_tca, comp1.sup_acc, comp1.sup_plu, comp1.sup_reg, comp1.sup_sal, comp1.sup_serv, comp1.sup_ot, comp1.descripcio_COMP, comp1.lloc_COMP, comp1.data_COMP, comp1.titulars_compareixen_COMP, comp1.representant_admin_COMP, comp1.perit_COMP, comp1.titulars_signen_COMP, comp1.observacions_COMP, comp1.registral_origen, comp1.tom, comp1.llibre, comp1.full, comp1.inscripcio, comp1.data_inscripcio, comp1.registre_prop
					FROM taula_tramit_COMP_1 as comp1 where editat IN ('si', 'Si', 'SI', 'sí', 'Sí', 'SÍ')
                    UNION
                    SELECT comp2.titol_proj, comp2.clauproj_exp, comp2.procediment, comp2.data_aprovacio, comp2.temps_obra, comp2.demanial, comp2.num_finca, comp2.muni, comp2.pol, comp2.parce, comp2.qual_fiscal, comp2.pers_fis_jurid, comp2.titular_1, comp2.titular_2, comp2.titular_3, comp2.adresa_1, comp2.adresa_2, comp2.adresa_3, comp2.tel_1, comp2.tel_2, comp2.tel_3, comp2.email_1, comp2.email_2, comp2.email_3, comp2.sup_exp, comp2.sup_res, comp2.sup_pot, comp2.sup_les, comp2.sup_lea, comp2.sup_tcs, comp2.sup_tca, comp2.sup_acc, comp2.sup_plu, comp2.sup_reg, comp2.sup_sal, comp2.sup_serv, comp2.sup_ot, comp2.descripcio_COMP, comp2.lloc_COMP, comp2.data_COMP, comp2.titulars_compareixen_COMP, comp2.representant_admin_COMP, comp2.perit_COMP, comp2.titulars_signen_COMP, comp2.observacions_COMP, comp2.registral_origen, comp2.tom, comp2.llibre, comp2.full, comp2.inscripcio, comp2.data_inscripcio, comp2.registre_prop
					FROM taula_tramit_COMP_2 as comp2 where editat IN ('si', 'Si', 'SI', 'sí', 'Sí', 'SÍ')
                    ORDER BY num_finca;
                    """
                    ]

                    try:
                        for query in sql_queries:
                            conn.executeSql(query)
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error SQL", f"Error a l'executar l'ordre SQL: {e}")

                    file_name = gpkg_path + '|layername=taula_tramit_COMP'
                    layer_name = 'taula_tramit_COMP'
                    taula_tramit_COMP = QgsVectorLayer(file_name, layer_name, 'ogr')

                    # Crear una configuració de formulari d'edició
                    form_config = QgsEditFormConfig()
                    form_config.setUiForm(self.plugin_dir + '\\formularis/Taula_COMP.ui')

                    # Assignar la configuració de formulari a la capa
                    taula_tramit_COMP.setEditFormConfig(form_config)

                    QgsProject.instance().addMapLayer(taula_tramit_COMP)

                def generar_dades_generals_ord():
            
                    sql_queries = [
                    """
                    delete from gpkg_contents where table_name is 'dades_generals';
                    """,
                    """
                    insert into gpkg_contents (table_name, data_type, identifier, description, last_change)
                    values ('dades_generals', 'attributes', 'dades_generals', 'dades comuns a tots els expedients', strftime('%Y-%m-%dT%H:%M:%fZ', 'now'));
                    """,
                    """
                    create table dades_generals(
                    fid INTEGER PRIMARY KEY AUTOINCREMENT, clauproj TEXT(25), titol_proj TEXT, clauproj_exp TEXT, procediment TEXT(8), data_aprovacio TEXT, num_DOGC_IP_APO INT, data_DOGC_IP_APO TEXT(10), nom_diari_1_IP_APO TEXT(25), data_diari_1_IP_APO TEXT(10), nom_diari_2_IP_APO TEXT(25), data_diari_2_IP_APO TEXT(10), temps_obra TEXT(25)
                    );
                    """,
                    """
                    CREATE TRIGGER "trigger_insert_feature_count_dades_generals" AFTER INSERT ON "dades_generals" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('dades_generals'); END
                    """,
                    """
                    CREATE TRIGGER "trigger_delete_feature_count_dades_generals" AFTER DELETE ON "dades_generals" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('dades_generals'); END
                    """,
                    """
                    insert into dades_generals (procediment) values ("ordinari");
                    """
                    ]
                    try:
                        for query in sql_queries:
                            conn.executeSql(query)
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error SQL", f"Error a l'executar l'ordre SQL: {e}")

                    file_name = gpkg_path + '|layername=dades_generals'
                    layer_name = 'dades_generals'
                    dades_generals = QgsVectorLayer(file_name,layer_name,'ogr')
                                    
                    QgsProject.instance().addMapLayer(dades_generals)

                def generar_taula_tramit_MA_ord():
                    sql_queries = [
                        "DELETE FROM gpkg_contents WHERE table_name = 'taula_tramit_MA';",
                        """
                        INSERT INTO gpkg_contents (table_name, data_type, identifier, description, last_change)
                        VALUES ('taula_tramit_MA', 'attributes', 'taula_tramit_MA', 'taula tramitació actes de mutu acord', strftime('%Y-%m-%dT%H:%M:%fZ', 'now'));
                        """,
                        """
                        CREATE TABLE taula_tramit_MA(
                        fid INTEGER PRIMARY KEY AUTOINCREMENT,titol_proj TEXT, clauproj_exp TEXT, procediment TEXT(8), data_aprovacio TEXT, temps_obra TEXT(25), demanial TEXT(2), num_finca TEXT, muni TEXT, pol TEXT, parce TEXT, sup_cad_parce MEDIUMINT, pers_fis_jurid TEXT, titular_1 TEXT, titular_2 TEXT, titular_3 TEXT, adresa_1 TEXT, adresa_2 TEXT, adresa_3 TEXT, tel_1 TEXT, tel_2 TEXT, tel_3 TEXT, email_1 TEXT, email_2 TEXT, email_3 TEXT, sup_exp MEDIUMINT, sup_res MEDIUMINT, sup_pot MEDIUMINT, sup_les MEDIUMINT, sup_lea MEDIUMINT, sup_tcs MEDIUMINT, sup_tca MEDIUMINT, sup_acc MEDIUMINT, sup_plu MEDIUMINT, sup_reg MEDIUMINT, sup_sal MEDIUMINT, sup_serv MEDIUMINT, sup_ot MEDIUMINT, descripcio_MA TEXT, lloc_MA TEXT, data_MA TEXT, titulars_compareixen_MA TEXT, representant_admin_MA TEXT, perit_MA TEXT, titulars_signen_MA TEXT, import_JustPreu REAL, import_JustPreu_lletres TEXT, import_exp REAL, import_serv REAL, import_ot REAL, import_const_inst REAL, import_vol REAL, import_perj REAL, import_xec_APOD REAL, observacions_MA TEXT, registral_origen TEXT, tom TEXT, llibre TEXT, full TEXT, inscripcio TEXT, data_inscripcio TEXT, registre_prop TEXT, editat TEXT(2)
                        );
                        """,
                        """
                        CREATE TRIGGER "trigger_insert_feature_count_taula_tramit_MA" AFTER INSERT ON "taula_tramit_MA" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('taula_tramit_MA'); END;
                        """,
                        """
                        CREATE TRIGGER "trigger_delete_feature_count_taula_tramit_MA" AFTER DELETE ON "taula_tramit_MA" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('taula_tramit_MA'); END;
                        """,
                        """
                        INSERT INTO taula_tramit_MA (titol_proj,clauproj_exp,procediment,data_aprovacio, temps_obra, demanial, num_finca, muni, pol, parce, sup_cad_parce,pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_serv, sup_ot, descripcio_MA, lloc_MA, data_MA, titulars_compareixen_MA, representant_admin_MA, perit_MA, titulars_signen_MA, import_JustPreu,import_JustPreu_lletres, import_exp, import_serv, import_ot, import_const_inst, import_vol, import_perj, import_xec_APOD, observacions_MA, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, registre_prop)
                        SELECT dg.titol_proj, dg.clauproj_exp, dg.procediment, dg.data_aprovacio, dg.temps_obra, dt.demanial, dt.num_finca, dt.muni, dt.pol, dt.parce, dt.sup_cad_parce,pers_fis_jurid, dt.titular_1, dt.titular_2, dt.titular_3, dt.adresa_1, dt.adresa_2, dt.adresa_3, dt.tel_1, dt.tel_2, dt.tel_3, dt.email_1, dt.email_2, dt.email_3, dt.sup_exp, dt.sup_res, dt.sup_pot, dt.sup_les, dt.sup_lea, dt.sup_tcs, dt.sup_tca, dt.sup_acc, dt.sup_plu, dt.sup_reg, dt.sup_sal, dt.sup_serv, dt.sup_ot, dt.descripcio_MA, dt.lloc_MA, dt.data_MA, dt.titulars_compareixen_MA, dt.representant_admin_MA, dt.perit_MA, dt.titulars_signen_MA, dt.import_JustPreu,import_JustPreu_lletres, dt.import_exp, dt.import_serv, dt.import_ot, dt.import_const_inst, dt.import_vol, import_perj, dt.import_xec_APOD, dt.observacions_MA, dt.registral_origen, dt.tom, dt.llibre, dt.full, dt.inscripcio, dt.data_inscripcio, dt.registre_prop
                        FROM dades_generals as dg
                        INNER JOIN dades_tramit as dt ON dg.clauproj_exp = dt.clauproj_exp
                        order by dt.num_finca;
                        """
                    ]

                    try:
                        for query in sql_queries:
                            conn.executeSql(query)
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error SQL", f"Error a l'executar l'ordre SQL: {e}")

                    file_name = gpkg_path + '|layername=taula_tramit_MA'
                    layer_name = 'taula_tramit_MA'
                    taula_tramit_MA = QgsVectorLayer(file_name, layer_name, 'ogr')

                    # Crear una configuració de formulari d'edició
                    form_config = QgsEditFormConfig()
                    form_config.setUiForm(self.plugin_dir + '\\formularis/Taula_MA_ord.ui')

                    # Assignar la configuració de formulari a la capa
                    taula_tramit_MA.setEditFormConfig(form_config)

                    QgsProject.instance().addMapLayer(taula_tramit_MA)

                def act_dades_tramit_desde_MA_ord():
                    sql_query = """
                    UPDATE dades_tramit
                    SET (
                    demanial, num_finca, muni, pol, parce, sup_cad_parce,pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_serv, sup_ot, descripcio_MA, lloc_MA, data_MA, titulars_compareixen_MA, representant_admin_MA, perit_MA, titulars_signen_MA, import_JustPreu,import_JustPreu_lletres, import_exp, import_serv, import_ot, import_const_inst, import_vol, import_perj, import_xec_APOD, observacions_MA, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, registre_prop
                    ) =
                    (
                    SELECT
                    demanial, num_finca, muni, pol, parce, sup_cad_parce,pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_serv, sup_ot, descripcio_MA, lloc_MA, data_MA, titulars_compareixen_MA, representant_admin_MA, perit_MA, titulars_signen_MA, import_JustPreu,import_JustPreu_lletres, import_exp, import_serv, import_ot, import_const_inst, import_vol, import_perj, import_xec_APOD, observacions_MA, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, registre_prop
                    FROM taula_tramit_MA
                    WHERE taula_tramit_MA.num_finca = dades_tramit.num_finca
                    )
                    WHERE EXISTS (
                    SELECT* FROM taula_tramit_MA WHERE taula_tramit_MA.num_finca = dades_tramit.num_finca
                    )
                    """
                    try:
                        conn.executeSql(sql_query)
                        QMessageBox.information(iface.mainWindow(), "Success", "La taula dades_tramit s'ha actualitzat.")
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error", f"Error a l'executar l'ordre SQL: {e}")

                def combinar_MA_1_MA_2_ord():
                    sql_queries = [
                    "DELETE FROM gpkg_contents WHERE table_name = 'taula_tramit_MA';",
                    """
                    INSERT INTO gpkg_contents (table_name, data_type, identifier, description, last_change)
                    VALUES ('taula_tramit_MA', 'attributes', 'taula_tramit_MA', 'taula tramitació actes de mutu acord', strftime('%Y-%m-%dT%H:%M:%fZ', 'now'));
                    """,
                    """
                    CREATE TABLE taula_tramit_MA(
                    fid INTEGER PRIMARY KEY AUTOINCREMENT,titol_proj TEXT, clauproj_exp TEXT, procediment TEXT(8), data_aprovacio TEXT, temps_obra TEXT(25), demanial TEXT (2), num_finca TEXT, muni TEXT, pol TEXT, parce TEXT, sup_cad_parce MEDIUMINT, pers_fis_jurid TEXT, titular_1 TEXT, titular_2 TEXT, titular_3 TEXT, adresa_1 TEXT, adresa_2 TEXT, adresa_3 TEXT, tel_1 TEXT, tel_2 TEXT, tel_3 TEXT, email_1 TEXT, email_2 TEXT, email_3 TEXT, sup_exp MEDIUMINT, sup_res MEDIUMINT, sup_pot MEDIUMINT, sup_les MEDIUMINT, sup_lea MEDIUMINT, sup_tcs MEDIUMINT, sup_tca MEDIUMINT, sup_acc MEDIUMINT, sup_plu MEDIUMINT, sup_reg MEDIUMINT, sup_sal MEDIUMINT, sup_serv MEDIUMINT, sup_ot MEDIUMINT, descripcio_MA TEXT, lloc_MA TEXT, data_MA TEXT, titulars_compareixen_MA TEXT, representant_admin_MA TEXT, perit_MA TEXT, titulars_signen_MA TEXT, import_JustPreu REAL, import_JustPreu_lletres TEXT, import_exp REAL, import_serv REAL, import_ot REAL, import_const_inst REAL, import_vol REAL, import_perj REAL, import_xec_APOD REAL, observacions_MA TEXT, registral_origen TEXT, tom TEXT, llibre TEXT, full TEXT, inscripcio TEXT, data_inscripcio TEXT, registre_prop TEXT
                    );
                    """,
                    """
                    CREATE TRIGGER "trigger_insert_feature_count_taula_tramit_MA" AFTER INSERT ON "taula_tramit_MA" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('taula_tramit_MA'); END;
                    """,
                    """
                    CREATE TRIGGER "trigger_delete_feature_count_taula_tramit_MA" AFTER DELETE ON "taula_tramit_MA" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('taula_tramit_MA'); END;
                    """,
                    """
                    INSERT INTO taula_tramit_MA (
                    titol_proj,clauproj_exp,procediment,data_aprovacio, temps_obra, demanial, num_finca, muni, pol, parce, sup_cad_parce,pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_serv, sup_ot, descripcio_MA, lloc_MA, data_MA, titulars_compareixen_MA, representant_admin_MA, perit_MA, titulars_signen_MA, import_JustPreu,import_JustPreu_lletres, import_exp, import_serv, import_ot, import_const_inst, import_vol, import_perj, import_xec_APOD, observacions_MA, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, registre_prop
                    )
                    SELECT ma1.titol_proj, ma1.clauproj_exp, ma1.procediment, ma1.data_aprovacio, ma1.temps_obra, ma1.demanial, ma1.num_finca, ma1.muni, ma1.pol, ma1.parce, ma1.sup_cad_parce,pers_fis_jurid, ma1.titular_1, ma1.titular_2, ma1.titular_3, ma1.adresa_1, ma1.adresa_2, ma1.adresa_3, ma1.tel_1, ma1.tel_2, ma1.tel_3, ma1.email_1, ma1.email_2, ma1.email_3, ma1.sup_exp, ma1.sup_res, ma1.sup_pot, ma1.sup_les, ma1.sup_lea, ma1.sup_tcs, ma1.sup_tca, ma1.sup_acc, ma1.sup_plu, ma1.sup_reg, ma1.sup_sal, ma1.sup_serv, ma1.sup_ot, ma1.descripcio_MA, ma1.lloc_MA, ma1.data_MA, ma1.titulars_compareixen_MA, ma1.representant_admin_MA, ma1.perit_MA, ma1.titulars_signen_MA, ma1.import_JustPreu,import_JustPreu_lletres, ma1.import_exp, ma1.import_serv, ma1.import_ot, ma1.import_const_inst, ma1.import_vol, import_perj, ma1.import_xec_APOD, ma1.observacions_MA, ma1.registral_origen, ma1.tom, ma1.llibre, ma1.full, ma1.inscripcio, ma1.data_inscripcio, ma1.registre_prop
                    FROM taula_tramit_MA_1 as ma1 where editat IN ('si', 'Si', 'SI', 'sí', 'Sí', 'SÍ')
                    UNION
                    SELECT ma2.titol_proj, ma2.clauproj_exp, ma2.procediment, ma2.data_aprovacio, ma2.temps_obra, ma2.demanial, ma2.num_finca, ma2.muni, ma2.pol, ma2.parce, ma2.sup_cad_parce,pers_fis_jurid, ma2.titular_1, ma2.titular_2, ma2.titular_3, ma2.adresa_1, ma2.adresa_2, ma2.adresa_3, ma2.tel_1, ma2.tel_2, ma2.tel_3, ma2.email_1, ma2.email_2, ma2.email_3, ma2.sup_exp, ma2.sup_res, ma2.sup_pot, ma2.sup_les, ma2.sup_lea, ma2.sup_tcs, ma2.sup_tca, ma2.sup_acc, ma2.sup_plu, ma2.sup_reg, ma2.sup_sal, ma2.sup_serv, ma2.sup_ot, ma2.descripcio_MA, ma2.lloc_MA, ma2.data_MA, ma2.titulars_compareixen_MA, ma2.representant_admin_MA, ma2.perit_MA, ma2.titulars_signen_MA, ma2.import_JustPreu,import_JustPreu_lletres, ma2.import_exp, ma2.import_serv, ma2.import_ot, ma2.import_const_inst, ma2.import_vol, import_perj, ma2.import_xec_APOD, ma2.observacions_MA, ma2.registral_origen, ma2.tom, ma2.llibre, ma2.full, ma2.inscripcio, ma2.data_inscripcio, ma2.registre_prop
                    FROM taula_tramit_MA_2 as ma2 where editat IN ('si', 'Si', 'SI', 'sí', 'Sí', 'SÍ')
                    ORDER BY num_finca;
                    """
                    ]

                    try:
                        for query in sql_queries:
                            conn.executeSql(query)
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error SQL", f"Error a l'executar l'ordre SQL: {e}")

                    file_name = gpkg_path + '|layername=taula_tramit_MA'
                    layer_name = 'taula_tramit_MA'
                    taula_tramit_MA = QgsVectorLayer(file_name, layer_name, 'ogr')

                    # Crear una configuració de formulari d'edició
                    form_config = QgsEditFormConfig()
                    form_config.setUiForm(self.plugin_dir + '\\formularis/Taula_MA_ord.ui')

                    # Assignar la configuració de formulari a la capa
                    taula_tramit_MA.setEditFormConfig(form_config)

                    QgsProject.instance().addMapLayer(taula_tramit_MA)

                def generar_taula_tramit_APOD_ord():
                    sql_queries = [
                        "DELETE FROM gpkg_contents WHERE table_name = 'taula_tramit_APOD';",
                        """
                        INSERT INTO gpkg_contents (table_name, data_type, identifier, description, last_change)
                        VALUES ('taula_tramit_APOD', 'attributes', 'taula_tramit_APOD', 'taula tramitació actes de pagament', strftime('%Y-%m-%dT%H:%M:%fZ', 'now'));
                        """,
                        """
                        CREATE TABLE taula_tramit_APOD(
                        fid INTEGER PRIMARY KEY AUTOINCREMENT,titol_proj TEXT, clauproj_exp TEXT, procediment TEXT(8), data_aprovacio TEXT, num_finca TEXT, muni TEXT, pol TEXT, parce TEXT, qual_fiscal TEXT, pers_fis_jurid TEXT, titular_1 TEXT, titular_2 TEXT, titular_3 TEXT, adresa_1 TEXT, adresa_2 TEXT, adresa_3 TEXT, tel_1 TEXT, tel_2 TEXT, tel_3 TEXT, email_1 TEXT, email_2 TEXT, email_3 TEXT, registral_origen TEXT, tom TEXT, llibre TEXT, full TEXT, inscripcio TEXT, data_inscripcio TEXT, sup_registral TEXT, registre_prop TEXT, sup_exp MEDIUMINT, sup_res MEDIUMINT, sup_pot MEDIUMINT, sup_les MEDIUMINT, sup_lea MEDIUMINT, sup_tcs MEDIUMINT, sup_tca MEDIUMINT, sup_acc MEDIUMINT, sup_plu MEDIUMINT, sup_reg MEDIUMINT, sup_sal MEDIUMINT, sup_serv MEDIUMINT, sup_ot MEDIUMINT, import_JustPreu REAL, import_JustPreu_lletres TEXT, import_exp REAL, import_serv REAL, import_ot REAL, import_const_inst REAL, import_vol REAL, import_perj REAL, import_xec_APOD REAL, num_xec_APOD TEXT, lloc_APOD TEXT, data_MA TEXT, data_APOD TEXT, titulars_compareixen_APOD TEXT, representant_admin_APOD TEXT, perit_APOD TEXT, titulars_signen_APOD TEXT, descripcio_registral TEXT, titol_registral TEXT, afeccio_registral TEXT, observacions_APOD TEXT, percebut_APOD TEXT, editat TEXT(2)
                        );
                        """,
                        """
                        CREATE TRIGGER "trigger_insert_feature_count_taula_tramit_APOD" AFTER INSERT ON "taula_tramit_APOD" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('taula_tramit_APOD'); END;
                        """,
                        """
                        CREATE TRIGGER "trigger_delete_feature_count_taula_tramit_APOD" AFTER DELETE ON "taula_tramit_APOD" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('taula_tramit_APOD'); END;
                        """,
                        """
                        INSERT INTO taula_tramit_APOD (
                        titol_proj,clauproj_exp,procediment,data_aprovacio, num_finca, muni, pol, parce, qual_fiscal, pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, sup_registral, registre_prop, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_serv, sup_ot, import_JustPreu, import_JustPreu_lletres, import_exp, import_serv, import_ot, import_const_inst, import_vol, import_perj, import_xec_APOD, num_xec_APOD, lloc_APOD, data_MA, data_APOD, titulars_compareixen_APOD, representant_admin_APOD, perit_APOD, titulars_signen_APOD, descripcio_registral, titol_registral, afeccio_registral, observacions_APOD, percebut_APOD
                        )
                        SELECT dg.titol_proj, dg.clauproj_exp, dg.procediment, dg.data_aprovacio, dt.num_finca, dt.muni, dt.pol, dt.parce, dt.qual_fiscal, dt.pers_fis_jurid, dt.titular_1, dt.titular_2, dt.titular_3, dt.adresa_1, dt.adresa_2, dt.adresa_3, dt.tel_1, dt.tel_2, dt.tel_3, dt.email_1, dt.email_2, dt.email_3, dt.registral_origen, dt.tom, dt.llibre, dt.full, dt.inscripcio, dt.data_inscripcio, dt.sup_registral, dt.registre_prop, dt.sup_exp, dt.sup_res, dt.sup_pot, dt.sup_les, dt.sup_lea, dt.sup_tcs, dt.sup_tca, dt.sup_acc, dt.sup_plu, dt.sup_reg, dt.sup_sal, dt.sup_serv, dt.sup_ot, dt.import_JustPreu, dt.import_JustPreu_lletres, dt.import_exp, dt.import_serv, dt.import_ot, dt.import_const_inst, dt.import_vol, dt.import_perj, dt.import_xec_APOD, dt.num_xec_APOD, dt.lloc_APOD, dt.data_APO, dt.data_APOD, dt.titulars_compareixen_APOD, dt.representant_admin_APOD, dt.perit_APOD, dt.titulars_signen_APOD, dt.descripcio_registral, dt.titol_registral, dt.afeccio_registral, dt.observacions_APOD, dt.percebut_APOD
                        FROM dades_generals as dg
                        INNER JOIN dades_tramit as dt ON dg.clauproj_exp = dt.clauproj_exp
                        order by dt.num_finca;
                        """
                    ]

                    try:
                        for query in sql_queries:
                            conn.executeSql(query)
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error SQL", f"Error a l'executar l'ordre SQL: {e}")

                    file_name = gpkg_path + '|layername=taula_tramit_APOD'
                    layer_name = 'taula_tramit_APOD'
                    taula_tramit_APOD = QgsVectorLayer(file_name, layer_name, 'ogr')

                    # Crear una configuració de formulari d'edició
                    form_config = QgsEditFormConfig()
                    form_config.setUiForm(self.plugin_dir + '\\formularis/Taula_APOD_ord.ui')

                    # Assignar la configuració de formulari a la capa
                    taula_tramit_APOD.setEditFormConfig(form_config)

                    QgsProject.instance().addMapLayer(taula_tramit_APOD)

                def act_dades_tramit_desde_APOD_ord():
        
                    sql_query = """
                    UPDATE dades_tramit
                    SET (
                    num_finca, muni, pol, parce, qual_fiscal, pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, sup_registral, registre_prop, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_serv, sup_ot, import_JustPreu, import_JustPreu_lletres, import_exp, import_serv, import_ot, import_const_inst, import_vol, import_perj, import_xec_APOD, num_xec_APOD, lloc_APOD, data_APO, data_APOD, titulars_compareixen_APOD, representant_admin_APOD, perit_APOD, titulars_signen_APOD, descripcio_registral, titol_registral, afeccio_registral, observacions_APOD, percebut_APOD
                    ) =
                    (
                    SELECT
                    num_finca, muni, pol, parce, qual_fiscal, pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, sup_registral, registre_prop, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_serv, sup_ot, import_JustPreu, import_JustPreu_lletres, import_exp, import_serv, import_ot, import_const_inst, import_vol, import_perj, import_xec_APOD, num_xec_APOD, lloc_APOD, data_APO, data_APOD, titulars_compareixen_APOD, representant_admin_APOD, perit_APOD, titulars_signen_APOD, descripcio_registral, titol_registral, afeccio_registral, observacions_APOD, percebut_APOD
                    FROM taula_tramit_APOD
                    WHERE taula_tramit_APOD.num_finca = dades_tramit.num_finca
                    )
                    WHERE EXISTS (
                    SELECT* FROM taula_tramit_APOD WHERE taula_tramit_APOD.num_finca = dades_tramit.num_finca
                    )
                    """
                    try:
                        conn.executeSql(sql_query)
                        QMessageBox.information(iface.mainWindow(), "Success", "La taula dades_tramit s'ha actualitzat.")
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error", f"Error a l'executar l'ordre SQL: {e}")

                def combinar_APOD_1_APOD_2_ord():
                    sql_queries = [
                    "DELETE FROM gpkg_contents WHERE table_name = 'taula_tramit_APOD';",
                    """
                    INSERT INTO gpkg_contents (table_name, data_type, identifier, description, last_change)
                    VALUES ('taula_tramit_APOD', 'attributes', 'taula_tramit_APOD', 'taula tramitació actes de pagament', strftime('%Y-%m-%dT%H:%M:%fZ', 'now'));
                    """,
                    """
                    CREATE TABLE taula_tramit_APOD(
                    fid INTEGER PRIMARY KEY AUTOINCREMENT, titol_proj TEXT, clauproj_exp TEXT, procediment TEXT(8), data_aprovacio TEXT, num_finca TEXT, muni TEXT, pol TEXT, parce TEXT, sup_cad_parce MEDIUMINT, pers_fis_jurid TEXT, titular_1 TEXT, titular_2 TEXT, titular_3 TEXT, adresa_1 TEXT, adresa_2 TEXT, adresa_3 TEXT, tel_1 TEXT, tel_2 TEXT, tel_3 TEXT, eapodil_1 TEXT, eapodil_2 TEXT, eapodil_3 TEXT, sup_exp MEDIUMINT, sup_res MEDIUMINT, sup_pot MEDIUMINT, sup_les MEDIUMINT, sup_lea MEDIUMINT, sup_tcs MEDIUMINT, sup_tca MEDIUMINT, sup_acc MEDIUMINT, sup_plu MEDIUMINT, sup_reg MEDIUMINT, sup_sal MEDIUMINT, sup_serv MEDIUMINT, sup_ot MEDIUMINT, descripcio_APOD TEXT, lloc_APOD TEXT, data_APOD TEXT, titulars_compareixen_APOD TEXT, representant_admin_APOD TEXT, perit_APOD TEXT, titulars_signen_APOD TEXT, import_JustPreu REAL, import_JustPreu_lletres TEXT, import_exp REAL, import_serv REAL, import_ot REAL, import_const_inst REAL, import_vol REAL, import_perj REAL, import_xec_APOD REAL, observacions_APOD TEXT, registral_origen TEXT, tom TEXT, llibre TEXT, full TEXT, inscripcio TEXT, data_inscripcio TEXT, registre_prop TEXT
                    );
                    """,
                    """
                    CREATE TRIGGER "trigger_insert_feature_count_taula_tramit_APOD" AFTER INSERT ON "taula_tramit_APOD" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count + 1 WHERE lower(table_name) = lower('taula_tramit_APOD'); END;
                    """,
                    """
                    CREATE TRIGGER "trigger_delete_feature_count_taula_tramit_APOD" AFTER DELETE ON "taula_tramit_APOD" BEGIN UPDATE gpkg_ogr_contents SET feature_count = feature_count - 1 WHERE lower(table_name) = lower('taula_tramit_APOD'); END;
                    """,
                    """
                    INSERT INTO taula_tramit_APOD (
                    titol_proj,clauproj_exp,procediment,data_aprovacio, num_finca, muni, pol, parce, qual_fiscal, pers_fis_jurid, titular_1, titular_2, titular_3, adresa_1, adresa_2, adresa_3, tel_1, tel_2, tel_3, email_1, email_2, email_3, registral_origen, tom, llibre, full, inscripcio, data_inscripcio, sup_registral, registre_prop, sup_exp, sup_res, sup_pot, sup_les, sup_lea, sup_tcs, sup_tca, sup_acc, sup_plu, sup_reg, sup_sal, sup_serv, sup_ot, import_JustPreu, import_JustPreu_lletres, import_exp, import_serv, import_ot, import_const_inst, import_vol, import_perj, import_xec_APOD, num_xec_APOD, lloc_APOD, data_APO, data_APOD, titulars_compareixen_APOD, representant_admin_APOD, perit_APOD, titulars_signen_APOD, descripcio_registral, titol_registral, afeccio_registral, observacions_APOD, percebut_APOD
                    )
                    SELECT apod1.titol_proj, apod1.clauproj_exp, apod1.procediment, apod1.data_aprovacio, apod1.num_finca, apod1.muni, apod1.pol, apod1.parce, apod1.qual_fiscal, apod1.pers_fis_jurid, apod1.titular_1, apod1.titular_2, apod1.titular_3, apod1.adresa_1, apod1.adresa_2, apod1.adresa_3, apod1.tel_1, apod1.tel_2, apod1.tel_3, apod1.email_1, apod1.email_2, apod1.email_3, apod1.registral_origen, apod1.tom, apod1.llibre, apod1.full, apod1.inscripcio, apod1.data_inscripcio, apod1.sup_registral, apod1.registre_prop, apod1.sup_exp, apod1.sup_res, apod1.sup_pot, apod1.sup_les, apod1.sup_lea, apod1.sup_tcs, apod1.sup_tca, apod1.sup_acc, apod1.sup_plu, apod1.sup_reg, apod1.sup_sal, apod1.sup_serv, apod1.sup_ot, apod1.import_JustPreu, apod1.import_JustPreu_lletres, apod1.import_exp, apod1.import_serv, apod1.import_ot, apod1.import_const_inst, apod1.import_vol, apod1.import_perj, apod1.import_xec_APOD, apod1.num_xec_APOD, apod1.lloc_APOD, apod1.data_APO, apod1.data_APOD, apod1.titulars_compareixen_APOD, apod1.representant_admin_APOD, apod1.perit_APOD, apod1.titulars_signen_APOD, apod1.descripcio_registral, apod1.titol_registral, apod1.afeccio_registral, apod1.observacions_APOD, apod1.percebut_APOD
                    FROM taula_tramit_APOD_1 as apod1 where editat IN ('si', 'Si', 'SI', 'sí', 'Sí', 'SÍ')
                    UNION
                    SELECT apod2.titol_proj, apod2.clauproj_exp, apod2.procediment, apod2.data_aprovacio, apod2.num_finca, apod2.muni, apod2.pol, apod2.parce, apod2.qual_fiscal, apod2.pers_fis_jurid, apod2.titular_1, apod2.titular_2, apod2.titular_3, apod2.adresa_1, apod2.adresa_2, apod2.adresa_3, apod2.tel_1, apod2.tel_2, apod2.tel_3, apod2.email_1, apod2.email_2, apod2.email_3, apod2.registral_origen, apod2.tom, apod2.llibre, apod2.full, apod2.inscripcio, apod2.data_inscripcio, apod2.sup_registral, apod2.registre_prop, apod2.sup_exp, apod2.sup_res, apod2.sup_pot, apod2.sup_les, apod2.sup_lea, apod2.sup_tcs, apod2.sup_tca, apod2.sup_acc, apod2.sup_plu, apod2.sup_reg, apod2.sup_sal, apod2.sup_serv, apod2.sup_ot, apod2.import_JustPreu, apod2.import_JustPreu_lletres, apod2.import_exp, apod2.import_serv, apod2.import_ot, apod2.import_const_inst, apod2.import_vol, apod2.import_perj, apod2.import_xec_APOD, apod2.num_xec_APOD, apod2.lloc_APOD, apod2.data_APO, apod2.data_APOD, apod2.titulars_compareixen_APOD, apod2.representant_admin_APOD, apod2.perit_APOD, apod2.titulars_signen_APOD, apod2.descripcio_registral, apod2.titol_registral, apod2.afeccio_registral, apod2.observacions_APOD, apod2.percebut_APOD
                    FROM taula_tramit_APOD_2 as apod2 where editat IN ('si', 'Si', 'SI', 'sí', 'Sí', 'SÍ')
                    ORDER BY num_finca;
                    """
                    ]

                    try:
                        for query in sql_queries:
                            conn.executeSql(query)
                    except Exception as e:
                        print(f"Error executing SQL query: {e}")
                        QMessageBox.information(iface.mainWindow(), "Error SQL", f"Error a l'executar l'ordre SQL: {e}")

                    file_name = gpkg_path + '|layername=taula_tramit_APOD'
                    layer_name = 'taula_tramit_APOD'
                    taula_tramit_APOD = QgsVectorLayer(file_name, layer_name, 'ogr')

                    # Crear una configuració de formulari d'edició
                    form_config = QgsEditFormConfig()
                    form_config.setUiForm(self.plugin_dir + '\\formularis/Taula_APOD_ord.ui')

                    # Assignar la configuració de formulari a la capa
                    taula_tramit_APOD.setEditFormConfig(form_config)

                    QgsProject.instance().addMapLayer(taula_tramit_APOD)

                # Afegim una funció per carregar les composicions d'impressió
                
                # Declaració de la ruta base sense el nom del fitxer
                base_template_path = os.path.join(self.plugin_dir, 'qtp_layout')
                # Declaració del nom del fitxer pendent d'assignar
                template_filename = ''
                # Declaració del nom de la composició pendent d'assignar
                layout_name = ''

                def layout_from_template():
                    project = QgsProject.instance()
                    layout = QgsPrintLayout(project)
                    layout.initializeDefaults()

                    # Assegura't que les variables tinguin contingut abans d'utilitzar-les
                    if not base_template_path or not template_filename or not layout_name:
                        raise ValueError("Les variables base_template_path, template_filename i layout_name han de tenir contingut")

                    # Construcció de la ruta completa
                    template_path = os.path.join(base_template_path, template_filename)

                    # Comprova si el fitxer existeix
                    if not os.path.exists(template_path):
                        raise FileNotFoundError(f"No s'ha trobat el fitxer: {template_path}")
                    
                    with open(template_path, 'r') as f:
                        template_content = f.read()

                    doc = QDomDocument()
                    if not doc.setContent(template_content):
                        raise ValueError("No s'ha pogut carregar el contingut de la plantilla")

                    if not layout.loadFromTemplate(doc, QgsReadWriteContext(), True):
                        raise ValueError("No s'ha pogut carregar la plantilla al layout")

                    layout.setName(layout_name)
                    project.layoutManager().addLayout(layout)
                
                
                # executem les funcions

                procediment_seleccionat = False
                
                if self.dlg.checkBox_triggers.isChecked():
                    procediment_seleccionat = True
                    canviar_triggers ()
                    self.dlg.checkBox_triggers.setChecked(False)

                #Procediment d'urgència
                
                if self.dlg.checkBox_urg.isChecked():
                    procediment_seleccionat = True
                
                    if self.dlg.checkBox_generals.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='dades_generals';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            QMessageBox.information(iface.mainWindow(), "dades_generals ja existeix", f"La taula 'dades_generals' ja existeix")
                            print('La taula "dades_generals" ja existeix.')
                            self.dlg.checkBox_generals.setChecked(False)
                        else:
                            generar_dades_generals()
                            self.dlg.checkBox_generals.setChecked(False)

                    if self.dlg.checkBox_tramit.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='dades_tramit';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            QMessageBox.information(iface.mainWindow(), "dades_tramit ja existeix", f"La taula 'dades_tramit' ja existeix")
                            print('La taula "dades_tramit" ja existeix.')
                            self.dlg.checkBox_tramit.setChecked(False)
                        else:
                            generar_dades_tramit ()
                            self.dlg.checkBox_tramit.setChecked(False)
                                    
                    if self.dlg.checkBox_apo.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_APO';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_APO ja existeix", f"La taula 'taula_tramit_APO' ja existeix")
                            print('La taula "taula_tramit_APO" ja existeix.')
                            self.dlg.checkBox_apo.setChecked(False)
                        else:
                            generar_taula_tramit_APO()
                            template_filename = 'APO.qpt'
                            layout_name = 'APO'
                            layout_from_template()
                            self.dlg.checkBox_apo.setChecked(False)

                    if self.dlg.checkBox_act_desde_apo.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_APO';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            act_dades_tramit_desde_APO()
                            self.dlg.checkBox_act_desde_apo.setChecked(False)
                        else:	
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_APO no existeix", f"La taula 'taula_tramit_APO' no existeix")
                            print('La taula "taula_tramit_APO" no existeix.')
                            self.dlg.checkBox_act_desde_apo.setChecked(False)

                    if self.dlg.checkBox_apo1_2.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_APO';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_APO ja existeix_2", f'Eliminar la "taula taula_tramit_APO" abans de combinar la "taula_tramit_APO_1" i la "taula_tramit_APO_2" en una nova "taula_tramit_APO".')
                            print('Eliminar la taula "taula_tramit_APO" abans de combinar la "taula_tramit_APO_1" i "la taula_tramit_APO_2" en una nova "taula_tramit_APO".')
                            self.dlg.checkBox_apo1_2.setChecked(False)
                        else:
                            combinar_APO_1_APO_2()
                            self.dlg.checkBox_apo1_2.setChecked(False)

                    if self.dlg.checkBox_ao.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_AO';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_AO ja existeix", f"La taula 'taula_tramit_AO' ja existeix")
                            print('La taula "taula_tramit_AO" ja existeix.')
                            self.dlg.checkBox_ao.setChecked(False)
                        else:
                            generar_taula_tramit_AO()
                            template_filename = 'AO.qpt'
                            layout_name = 'AO'
                            layout_from_template()                            
                            self.dlg.checkBox_ao.setChecked(False)

                    if self.dlg.checkBox_act_desde_ao.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_AO';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            act_dades_tramit_desde_AO()
                            self.dlg.checkBox_act_desde_ao.setChecked(False)
                        else:	
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_AO no existeix", f"La taula 'taula_tramit_AO' no existeix")
                            print('La taula "taula_tramit_AO" no existeix.')
                            self.dlg.checkBox_act_desde_ao.setChecked(False)

                    if self.dlg.checkBox_ao1_2.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_AO';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_AO ja existeix_2", f'Eliminar la "taula taula_tramit_AO" abans de combinar la "taula_tramit_AO_1" i la "taula_tramit_AO_2" en una nova "taula_tramit_AO".')
                            print('Eliminar la taula "taula_tramit_AO" abans de combinar la "taula_tramit_AO_1" i "la taula_tramit_AO_2" en una nova "taula_tramit_AO".')
                            self.dlg.checkBox_ao1_2.setChecked(False)
                        else:
                            combinar_AO_1_AO_2()
                            self.dlg.checkBox_ao1_2.setChecked(False)

                    if self.dlg.checkBox_ma.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_MA';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_MA ja existeix", f"La taula 'taula_tramit_MA' ja existeix")
                            print('La taula "taula_tramit_MA" ja existeix.')
                            self.dlg.checkBox_ma.setChecked(False)
                        else:
                            generar_taula_tramit_MA()
                            template_filename = 'MA_urg.qpt'
                            layout_name = 'MA_urg'
                            layout_from_template()
                            self.dlg.checkBox_ma.setChecked(False)

                    if self.dlg.checkBox_act_desde_ma.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_MA';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            act_dades_tramit_desde_MA()
                            self.dlg.checkBox_act_desde_ma.setChecked(False)
                        else:	
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_MA no existeix", f"La taula 'taula_tramit_MA' no existeix")
                            print('La taula "taula_tramit_MA" no existeix.')
                            self.dlg.checkBox_act_desde_ma.setChecked(False)

                    if self.dlg.checkBox_ma1_2.isChecked(): 
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_MA';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_MA ja existeix_2", f'Eliminar la "taula taula_tramit_MA" abans de combinar la "taula_tramit_MA_1" i la "taula_tramit_MA_2" en una nova "taula_tramit_MA".')
                            print('Eliminar la taula "taula_tramit_MA" abans de combinar la "taula_tramit_MA_1" i "la taula_tramit_MA_2" en una nova "taula_tramit_MA".')
                            self.dlg.checkBox_ma1_2.setChecked(False)
                        else:
                            combinar_MA_1_MA_2()
                            self.dlg.checkBox_ma1_2.setChecked(False)

                    if self.dlg.checkBox_apod.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_APOD';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_APOD ja existeix", f"La taula 'taula_tramit_APOD' ja existeix")
                            print('La taula "taula_tramit_APOD" ja existeix.')
                            self.dlg.checkBox_apod.setChecked(False)
                        else:
                            generar_taula_tramit_APOD()
                            template_filename = 'APOD_urg.qpt'
                            layout_name = 'APOD_urg'
                            layout_from_template()
                            self.dlg.checkBox_apod.setChecked(False)

                    if self.dlg.checkBox_act_desde_apod.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_APOD';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            act_dades_tramit_desde_APOD()
                            self.dlg.checkBox_act_desde_apod.setChecked(False)
                        else:	
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_APOD no existeix", f"La taula 'taula_tramit_APOD' no existeix")
                            print('La taula "taula_tramit_APOD" no existeix.')
                            self.dlg.checkBox_act_desde_apod.setChecked(False)

                    if self.dlg.checkBox_apod1_2.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_APOD';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_APOD ja existeix_2", f'Eliminar la "taula taula_tramit_APOD" abans de combinar la "taula_tramit_APOD_1" i la "taula_tramit_APOD_2" en una nova "taula_tramit_APOD".')
                            print('Eliminar la taula "taula_tramit_APOD" abans de combinar la "taula_tramit_APOD_1" i "la taula_tramit_APOD_2" en una nova "taula_tramit_APOD".')
                            self.dlg.checkBox_apod1_2.setChecked(False)
                        else:
                            combinar_APOD_1_APOD_2()
                            self.dlg.checkBox_apod1_2.setChecked(False)

                    if self.dlg.checkBox_comp.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_COMP';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_COMP ja existeix", f"La taula 'taula_tramit_COMP' ja existeix")
                            print('La taula "taula_tramit_COMP" ja existeix.')
                            self.dlg.checkBox_comp.setChecked(False)
                        else:
                            generar_taula_tramit_COMP()
                            template_filename = 'COMP_urg.qpt'
                            layout_name = 'COMP_urg'
                            layout_from_template()
                            self.dlg.checkBox_comp.setChecked(False)

                    if self.dlg.checkBox_act_desde_comp.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_COMP';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            act_dades_tramit_desde_COMP()
                            self.dlg.checkBox_act_desde_comp.setChecked(False)
                        else:
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_COMP no existeix", f"La taula 'taula_tramit_COMP' no existeix")
                            print('La taula "taula_tramit_COMP" no existeix.')
                            self.dlg.checkBox_act_desde_comp.setChecked(False)

                    if self.dlg.checkBox_comp1_2.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_COMP';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_COMP ja existeix_2", f'Eliminar la "taula taula_tramit_COMP" abans de combinar la "taula_tramit_COMP_1" i la "taula_tramit_COMP_2" en una nova "taula_tramit_COMP".')
                            print('Eliminar la taula "taula_tramit_COMP" abans de combinar la "taula_tramit_COMP_1" i "la taula_tramit_COMP_2" en una nova "taula_tramit_COMP".')
                            self.dlg.checkBox_comp1_2.setChecked(False)
                        else:
                            combinar_COMP_1_COMP_2()
                            self.dlg.checkBox_comp1_2.setChecked(False)
                            
                    self.dlg.checkBox_urg.setChecked(False)
                    
                #Prodeciment ordinari            
                if self.dlg.checkBox_ord.isChecked():
                    procediment_seleccionat = True
                
                    if self.dlg.checkBox_generals.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='dades_generals';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            QMessageBox.information(iface.mainWindow(), "dades_generals ja existeix", f"La taula 'dades_generals' ja existeix")
                            print('La taula "dades_generals" ja existeix.')
                            self.dlg.checkBox_generals.setChecked(False)
                        else:
                            generar_dades_generals_ord()
                            self.dlg.checkBox_generals.setChecked(False)

                    if self.dlg.checkBox_tramit.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='dades_tramit';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            QMessageBox.information(iface.mainWindow(), "dades_tramit ja existeix", f"La taula 'dades_tramit' ja existeix")
                            print('La taula "dades_tramit" ja existeix.')
                            self.dlg.checkBox_tramit.setChecked(False)
                        else:
                            generar_dades_tramit ()
                            self.dlg.checkBox_tramit.setChecked(False)
                
                    if self.dlg.checkBox_apo.isChecked():
                        QMessageBox.information(iface.mainWindow(), "Procediment ordinari", f"En procediment ordinari no es fa l'acta prèvia a la ocupació")
                        print("En procediment ordinari no es fa l'acta prèvia a la ocupació")
                        self.dlg.checkBox_apo.setChecked(False)

                    if self.dlg.checkBox_act_desde_apo.isChecked():
                        QMessageBox.information(iface.mainWindow(), "Procediment ordinari", f"En procediment ordinari no es fa l'acta prèvia a la ocupació")
                        print("En procediment ordinari no es fa l'acta prèvia a la ocupació")
                        self.dlg.checkBox_act_desde_apo.setChecked(False)

                    if self.dlg.checkBox_apo1_2.isChecked():
                        QMessageBox.information(iface.mainWindow(), "Procediment ordinari", f"En procediment ordinari no es fa l'acta prèvia a la ocupació")
                        print("En procediment ordinari no es fa l'acta prèvia a la ocupació")
                        self.dlg.checkBox_apo1_2.setChecked(False)

                    if self.dlg.checkBox_ao.isChecked():
                        QMessageBox.information(iface.mainWindow(), "Procediment ordinari", f"En procediment ordinari no es fa l'acta d'ocupació")
                        print("En procediment ordinari no es fa l'acta d'ocupació")
                        self.dlg.checkBox_ao.setChecked(False)

                    if self.dlg.checkBox_act_desde_ao.isChecked():
                        QMessageBox.information(iface.mainWindow(), "Procediment ordinari", f"En procediment ordinari no es fa l'acta d'ocupació")
                        print("En procediment ordinari no es fa l'acta d'ocupació")
                        self.dlg.checkBox_act_desde_ao.setChecked(False)

                    if self.dlg.checkBox_ao1_2.isChecked():
                        QMessageBox.information(iface.mainWindow(), "Procediment ordinari", f"En procediment ordinari no es fa l'acta d'ocupació")
                        print("En procediment ordinari no es fa l'acta d'ocupació")
                        self.dlg.checkBox_ao1_2.setChecked(False)

                    if self.dlg.checkBox_ma.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_MA';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_MA ja existeix", f"La taula 'taula_tramit_MA' ja existeix")
                            print('La taula "taula_tramit_MA" ja existeix.')
                            self.dlg.checkBox_ma.setChecked(False)
                        else:
                            generar_taula_tramit_MA_ord()
                            template_filename = 'MA_ord.qpt'
                            layout_name = 'MA_ord'
                            layout_from_template()
                            self.dlg.checkBox_ma.setChecked(False)

                    if self.dlg.checkBox_act_desde_ma.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_MA';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            act_dades_tramit_desde_MA_ord()
                            self.dlg.checkBox_act_desde_ma.setChecked(False)
                        else:	
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_MA no existeix", f"La taula 'taula_tramit_MA' no existeix")
                            print('La taula "taula_tramit_MA" no existeix.')
                            self.dlg.checkBox_act_desde_ma.setChecked(False)

                    if self.dlg.checkBox_ma1_2.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_MA';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_MA ja existeix_2", f'Eliminar la "taula taula_tramit_MA" abans de combinar la "taula_tramit_MA_1" i la "taula_tramit_MA_2" en una nova "taula_tramit_MA".')
                            print('Eliminar la taula "taula_tramit_MA" abans de combinar la "taula_tramit_MA_1" i "la taula_tramit_MA_2" en una nova "taula_tramit_MA".')
                            self.dlg.checkBox_ma1_2.setChecked(False)
                        else:
                            combinar_MA_1_MA_2_ord()
                            self.dlg.checkBox_ma1_2.setChecked(False)

                    if self.dlg.checkBox_apod.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_APOD';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_APOD ja existeix", f"La taula 'taula_tramit_APOD' ja existeix")
                            print('La taula "taula_tramit_APOD" ja existeix.')
                            self.dlg.checkBox_apod.setChecked(False)
                        else:
                            generar_taula_tramit_APOD_ord()
                            template_filename = 'APOD_ord.qpt'
                            layout_name = 'APOD_ord'
                            layout_from_template()
                            self.dlg.checkBox_apod.setChecked(False)

                    if self.dlg.checkBox_act_desde_apod.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_APOD';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            act_dades_tramit_desde_APOD_ord()
                            self.dlg.checkBox_act_desde_apod.setChecked(False)
                        else:	
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_APOD no existeix", f"La taula 'taula_tramit_APOD' no existeix")
                            print('La taula "taula_tramit_APOD" no existeix.')
                            self.dlg.checkBox_act_desde_apod.setChecked(False)

                    if self.dlg.checkBox_apod1_2.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_APOD';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_APOD ja existeix_2", f'Eliminar la "taula taula_tramit_APOD" abans de combinar la "taula_tramit_APOD_1" i la "taula_tramit_APOD_2" en una nova "taula_tramit_APOD".')
                            print('Eliminar la taula "taula_tramit_APOD" abans de combinar la "taula_tramit_APOD_1" i "la taula_tramit_APOD_2" en una nova "taula_tramit_APOD".')
                            self.dlg.checkBox_apod1_2.setChecked(False)
                        else:
                            combinar_APOD_1_APOD_2_ord()
                            self.dlg.checkBox_apod1_2.setChecked(False)

                    if self.dlg.checkBox_comp.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_COMP';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_COMP ja existeix", f"La taula 'taula_tramit_COMP' ja existeix")
                            print('La taula "taula_tramit_COMP" ja existeix.')
                            self.dlg.checkBox_comp.setChecked(False)
                        else:
                            generar_taula_tramit_COMP()
                            template_filename = 'COMP_ord.qpt'
                            layout_name = 'COMP_ord'
                            layout_from_template()
                            self.dlg.checkBox_comp.setChecked(False)

                    if self.dlg.checkBox_act_desde_comp.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_COMP';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            act_dades_tramit_desde_COMP()
                            self.dlg.checkBox_act_desde_comp.setChecked(False)
                        else:
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_COMP no existeix", f"La taula 'taula_tramit_COMP' no existeix")
                            print('La taula "taula_tramit_COMP" no existeix.')
                            self.dlg.checkBox_act_desde_comp.setChecked(False)

                    if self.dlg.checkBox_comp1_2.isChecked():
                        sql_check_table = """
                        SELECT name FROM sqlite_master WHERE type='table' AND name='taula_tramit_COMP';
                        """
                        result = conn.executeSql(sql_check_table)
                        if result:
                            QMessageBox.information(iface.mainWindow(), "taula_tramit_COMP ja existeix_2", f'Eliminar la "taula taula_tramit_COMP" abans de combinar la "taula_tramit_COMP_1" i la "taula_tramit_COMP_2" en una nova "taula_tramit_COMP".')
                            print('Eliminar la taula "taula_tramit_COMP" abans de combinar la "taula_tramit_COMP_1" i "la taula_tramit_COMP_2" en una nova "taula_tramit_COMP".')
                            self.dlg.checkBox_comp1_2.setChecked(False)
                        else:
                            combinar_COMP_1_COMP_2()
                            self.dlg.checkBox_comp1_2.setChecked(False)
                
                    self.dlg.checkBox_ord.setChecked(False)
                
                if not procediment_seleccionat:
                    QMessageBox.information(iface.mainWindow(), "Procediment", f"Has d'escollir un procediment")
                    print("Has d'escollir un procediment")
                    
        pass
